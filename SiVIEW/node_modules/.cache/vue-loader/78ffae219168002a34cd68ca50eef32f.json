{"remainingRequest":"C:\\Users\\kryst\\Documents\\Projets_2019\\apitest\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\kryst\\Documents\\Projets_2019\\apitest\\src\\components\\ApiGouv.vue?vue&type=style&index=0&lang=css&","dependencies":[{"path":"C:\\Users\\kryst\\Documents\\Projets_2019\\apitest\\src\\components\\ApiGouv.vue","mtime":1576574829662},{"path":"C:\\Users\\kryst\\Documents\\Projets_2019\\apitest\\node_modules\\css-loader\\dist\\cjs.js","mtime":1576166348000},{"path":"C:\\Users\\kryst\\Documents\\Projets_2019\\apitest\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1576166348000},{"path":"C:\\Users\\kryst\\Documents\\Projets_2019\\apitest\\node_modules\\postcss-loader\\src\\index.js","mtime":1576166348000},{"path":"C:\\Users\\kryst\\Documents\\Projets_2019\\apitest\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1576166348000},{"path":"C:\\Users\\kryst\\Documents\\Projets_2019\\apitest\\node_modules\\vue-loader\\lib\\index.js","mtime":1576166348000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKDQojbWFwIHsNCiAgcG9zaXRpb246IHJlbGF0aXZlOw0KICBwYWRkaW5nOiAwOw0KICB3aWR0aDogMTIwMHB4Ow0KICBoZWlnaHQ6IDYwMHB4Ow0KICBtYXJnaW4tbGVmdDogYXV0bzsNCiAgbWFyZ2luLXJpZ2h0OiBhdXRvOw0KfQ0KDQo="},{"version":3,"sources":["ApiGouv.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAyKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"ApiGouv.vue","sourceRoot":"src/components","sourcesContent":["<template>\r\n    <div>\r\n        <input list=\"browsers\" v-model=\"pays\">\r\n\r\n        <datalist id=\"browsers\">\r\n            <div v-if=\"continents\">\r\n                <div v-for=\"(continent, index) in continents\" :key=\"index\">\r\n                    <div v-for=\"(cont, index) in continent\" :key=\"`A-${index}`\">\r\n                        <div v-if=\"cont.translations.fr === 'France'\">\r\n                            <option>{{ cont.translations.fr }}</option>\r\n                        </div>\r\n                    </div>\r\n                    <option>-----------------------</option>\r\n                    <div v-for=\"(cont, index) in continent\" :key=\"`B-${index}`\">\r\n                        <div v-if=\"cont.translations.fr != 'France'\">\r\n                            <option>{{ cont.translations.fr }}</option>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </datalist>\r\n\r\n        <div v-if=\"pays === 'France'\">\r\n            <div @click=\"modal = false\"></div>\r\n\r\n            <input type=\"text\" autocomplete=\"off\" v-model=\"adresse1\" placeholder=\"adresse 1\" @focus=\"modal = true; resetVC()\"/>\r\n            <input v-model=\"adresse2\" placeholder=\"adresse 2\"/>\r\n            <input v-model=\"adresse3\" placeholder=\"adresse 3\"/>\r\n            <input v-model=\"postcode\" placeholder=\"code postal\"/>\r\n            <input v-model=\"ville\" placeholder=\"ville\"/>\r\n\r\n            <div v-if=\"adresse1 && modal\">\r\n                <div style=\"cursor:pointer;\" v-for=\"(feature, x) in filteredStates.features\" :key=\"`A-${x}`\">\r\n                    <ul>\r\n                        <li @click=\"setState(feature.properties.name, feature.properties.city, feature.properties.postcode, feature.geometry.coordinates[0], feature.geometry.coordinates[1])\">\r\n\r\n                            {{feature.properties.label}}\r\n                        </li>\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n            <div id=\"mymap\"></div>\r\n        </div>\r\n\r\n        <div v-if=\"pays != 'France'\">\r\n            <div v-for=\"(continent, index) in continents\" :key=\"index\">\r\n                <div v-for=\"(cont, index) in continent\" :key=\"`B-${index}`\">\r\n                    <div v-if=\"pays === cont.translations.fr\">\r\n                        <input v-model=\"adresse1\" placeholder=\"adresse 1\"/>\r\n                        <input v-model=\"adresse2\" placeholder=\"adresse 2\"/>\r\n                        <input v-model=\"adresse3\" placeholder=\"adresse 3\"/>\r\n                        <input v-model=\"postcode\" placeholder=\"code postal\"/>\r\n                        <input v-model=\"ville\" placeholder=\"ville\"/>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <p>{{ info }}</p>\r\n    </div>\r\n</template>\r\n\r\n\r\n<script>\r\n    import axios from 'axios';\r\n    import L from 'leaflet';\r\n\r\n    export default {\r\n        data() {\r\n            return {\r\n            api_adresse: \"https://api-adresse.data.gouv.fr/search/\",\r\n            api_country: \"https://restcountries.eu/rest/v2/region/\",\r\n            api_coindesk: \"https://api.coindesk.com/v1/bpi/currentprice.json\",\r\n            option_adresse: \"?q=\",\r\n            option_limit: \"&limit=10\",\r\n            option_ville: \"&type=street\",\r\n            option_postcode: '&postcode=',\r\n            pays: '',\r\n            info:'',\r\n            adresse1: '',\r\n            adresse2: '',\r\n            adresse3: '',\r\n            ville: '',\r\n            postcode: '',\r\n            http: '',\r\n            select_pays: false,\r\n            searching: false,\r\n            modal: false,\r\n\r\n            lon: '',\r\n            lat: '',\r\n\r\n            states: [],\r\n            filteredStates: [],\r\n\r\n            continents:[],\r\n            Ncontinents:[\r\n                'europe',\r\n                'asia',\r\n                'africa',\r\n                'americas',\r\n                'oceania'\r\n            ],\r\n            xcontinent: 0,\r\n            }\r\n        },\r\n        created() {\r\n            axios\r\n            .get('https://api.coindesk.com/v1/bpi/currentprice.json')\r\n            .then(response => (this.info = response))\r\n            if (this.xcontinent == 0) {\r\n                while (this.xcontinent < this.Ncontinents.length) {\r\n                    axios.get(this.api_country + this.Ncontinents[this.xcontinent])\r\n                    .then(response => {\r\n                        this.continents.push(response.data);\r\n                    })\r\n                    this.xcontinent = this.xcontinent + 1;\r\n                }\r\n            }\r\n        },\r\n        updated() {\r\n            if(this.adresse1){\r\n                this.http = this.api_adresse + this.option_adresse + this.adresse1\r\n\r\n                if(this.ville) {\r\n                    this.http = this.http + \"+\" + this.ville + this.option_ville\r\n                }\r\n                if (this.postcode) {\r\n                    this.http = this.http + this.option_postcode + this.postcode\r\n                }\r\n            }\r\n\r\n            if (this.adresse1) {\r\n                axios.get(this.http)\r\n                .then(response => {\r\n                    this.filterStates(response.data);\r\n                })\r\n            }\r\n            \r\n        },\r\n        methods: {\r\n            filterStates(states) {\r\n                this.filteredStates = states;\r\n            },\r\n            setState(adresse1, ville, postcode, lon, lat) {\r\n                this.adresse1 = adresse1;\r\n                this.ville = ville;\r\n                this.postcode = postcode;\r\n                this.modal = false;\r\n                this.initMap(lon, lat);\r\n            },\r\n            initMap(lon, lat) {\r\n                document.getElementById('mymap').innerHTML = \"<div id='map'></div>\";\r\n                let mymap = L.map('map').setView([lat, lon], 18);\r\n                L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {\r\n                    attribution: '&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'\r\n                }).addTo(mymap);\r\n                L.marker([lat, lon]).addTo(mymap)\r\n                .bindPopup(this.adresse1)\r\n                .openPopup();\r\n            },\r\n            resetVC() {\r\n                this.ville = '',\r\n                this.postcode = ''\r\n            }\r\n        },\r\n    }\r\n</script>\r\n\r\n<style>\r\n#map {\r\n  position: relative;\r\n  padding: 0;\r\n  width: 1200px;\r\n  height: 600px;\r\n  margin-left: auto;\r\n  margin-right: auto;\r\n}\r\n\r\n</style>"]}]}