{"remainingRequest":"C:\\Users\\kryst\\Documents\\Projets_2019\\17.12.19 - 05.01.2020\\group-745061\\name\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\kryst\\Documents\\Projets_2019\\17.12.19 - 05.01.2020\\group-745061\\name\\src\\components\\ApiGouv.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\kryst\\Documents\\Projets_2019\\17.12.19 - 05.01.2020\\group-745061\\name\\src\\components\\ApiGouv.vue","mtime":1576745679436},{"path":"C:\\Users\\kryst\\Documents\\Projets_2019\\17.12.19 - 05.01.2020\\group-745061\\name\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1576166348000},{"path":"C:\\Users\\kryst\\Documents\\Projets_2019\\17.12.19 - 05.01.2020\\group-745061\\name\\node_modules\\babel-loader\\lib\\index.js","mtime":1576166348000},{"path":"C:\\Users\\kryst\\Documents\\Projets_2019\\17.12.19 - 05.01.2020\\group-745061\\name\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1576166348000},{"path":"C:\\Users\\kryst\\Documents\\Projets_2019\\17.12.19 - 05.01.2020\\group-745061\\name\\node_modules\\vue-loader\\lib\\index.js","mtime":1576166348000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCgppbXBvcnQgYXhpb3MgZnJvbSAnYXhpb3MnOwppbXBvcnQgTCBmcm9tICdsZWFmbGV0JzsKCmV4cG9ydCBkZWZhdWx0IHsKICAgIGRhdGEoKSB7CgogICAgICAgIHJldHVybiB7CiAgICAgICAgYXBpX2FkcmVzc2U6ICJodHRwczovL2FwaS1hZHJlc3NlLmRhdGEuZ291di5mci9zZWFyY2gvIiwKICAgICAgICBhcGlfY291bnRyeTogImh0dHBzOi8vcmVzdGNvdW50cmllcy5ldS9yZXN0L3YyL3JlZ2lvbi8iLAogICAgICAgIGFwaV9lbnRyZXByaXNlOiAiaHR0cHM6Ly9lbnRyZXByaXNlLmRhdGEuZ291di5mci9hcGkvc2lyZW5lL3YzLyIsCiAgICAgICAgb3B0aW9uX3NpcmV0OiAiZXRhYmxpc3NlbWVudHMvIiwKICAgICAgICBvcHRpb25fc2lyZW46ICJ1bml0ZXNfbGVnYWxlcy8iLCAgICAKICAgICAgICBvcHRpb25fYWRyZXNzZTogIj9xPSIsCiAgICAgICAgb3B0aW9uX2xpbWl0OiAiJmxpbWl0PTEwIiwKICAgICAgICBvcHRpb25fdmlsbGU6ICImdHlwZT1zdHJlZXQiLAogICAgICAgIG9wdGlvbl9wb3N0Y29kZTogJyZwb3N0Y29kZT0nLAogICAgICAgIHNpcmV0OiAnJywKICAgICAgICBzaXJlbjogJycsCiAgICAgICAgcGF5czogJycsCiAgICAgICAgYWRyZXNzZTE6ICcnLAogICAgICAgIGFkcmVzc2UyOiAnJywKICAgICAgICBhZHJlc3NlMzogJycsCiAgICAgICAgdmlsbGU6ICcnLAogICAgICAgIHBvc3Rjb2RlOiAnJywKICAgICAgICBsYXQ6ICcnLAogICAgICAgIGxvbjogJycsCiAgICAgICAgaHR0cDogJycsCiAgICAgICAgc2VsZWN0X2Zvcm06ICcnLAogICAgICAgIHNlYXJjaGluZzogZmFsc2UsCiAgICAgICAgbW9kYWw6IGZhbHNlLAoKICAgICAgICBzdGF0ZXM6IFtdLAogICAgICAgIGZpbHRlcmVkU3RhdGVzOiBbXSwKCiAgICAgICAgY29udGluZW50czpbXSwKICAgICAgICBOY29udGluZW50czpbCiAgICAgICAgICAgICdldXJvcGUnLAogICAgICAgICAgICAnYXNpYScsCiAgICAgICAgICAgICdhZnJpY2EnLAogICAgICAgICAgICAnYW1lcmljYXMnLAogICAgICAgICAgICAnb2NlYW5pYScKICAgICAgICBdLAogICAgICAgIHhjb250aW5lbnQ6IDAsCiAgICAgICAgfQogICAgfSwKCiAgICBjcmVhdGVkKCkgewoKICAgICAgICBpZiAodGhpcy54Y29udGluZW50ID09IDApIHsKICAgICAgICAgICAgd2hpbGUgKHRoaXMueGNvbnRpbmVudCA8IHRoaXMuTmNvbnRpbmVudHMubGVuZ3RoKSB7CiAgICAgICAgICAgICAgICBheGlvcy5nZXQodGhpcy5hcGlfY291bnRyeSArIHRoaXMuTmNvbnRpbmVudHNbdGhpcy54Y29udGluZW50XSkKICAgICAgICAgICAgICAgIC50aGVuKHJlc3BvbnNlID0+IHsKICAgICAgICAgICAgICAgICAgICB0aGlzLmNvbnRpbmVudHMucHVzaChyZXNwb25zZS5kYXRhKTsKICAgICAgICAgICAgICAgIH0pCiAgICAgICAgICAgICAgICB0aGlzLnhjb250aW5lbnQgPSB0aGlzLnhjb250aW5lbnQgKyAxOwogICAgICAgICAgICB9CiAgICAgICAgfQogICAgfSwKCiAgICB1cGRhdGVkKCkgewoKICAgICAgICBpZih0aGlzLmFkcmVzc2UxKXsKICAgICAgICAgICAgdGhpcy5odHRwID0gdGhpcy5hcGlfYWRyZXNzZSArIHRoaXMub3B0aW9uX2FkcmVzc2UgKyB0aGlzLmFkcmVzc2UxCgogICAgICAgICAgICBpZih0aGlzLnZpbGxlKSB7CiAgICAgICAgICAgICAgICB0aGlzLmh0dHAgPSB0aGlzLmh0dHAgKyAiKyIgKyB0aGlzLnZpbGxlICsgdGhpcy5vcHRpb25fdmlsbGUKICAgICAgICAgICAgfQogICAgICAgICAgICBpZiAodGhpcy5wb3N0Y29kZSkgewogICAgICAgICAgICAgICAgdGhpcy5odHRwID0gdGhpcy5odHRwICsgdGhpcy5vcHRpb25fcG9zdGNvZGUgKyB0aGlzLnBvc3Rjb2RlCiAgICAgICAgICAgIH0KICAgICAgICAgICAgYXhpb3MuZ2V0KHRoaXMuaHR0cCkKICAgICAgICAgICAgLnRoZW4ocmVzcG9uc2UgPT4gewogICAgICAgICAgICAgICAgdGhpcy5maWx0ZXJTdGF0ZXMocmVzcG9uc2UuZGF0YSk7CiAgICAgICAgICAgIH0pCiAgICAgICAgfQoKICAgICAgICBpZih0aGlzLnNpcmV0ICYmICF0aGlzLnNpcmVuKSB7CiAgICAgICAgICAgIHRoaXMuaHR0cCA9IHRoaXMuYXBpX2VudHJlcHJpc2UgKyB0aGlzLm9wdGlvbl9zaXJldCArIHRoaXMuc2lyZXQKICAgICAgICAgICAgYXhpb3MuZ2V0KHRoaXMuaHR0cCkKICAgICAgICAgICAgLnRoZW4ocmVzcG9uc2UgPT4gewogICAgICAgICAgICAgICAgdGhpcy5maWx0ZXJTdGF0ZXMocmVzcG9uc2UuZGF0YSk7CiAgICAgICAgICAgIH0pCiAgICAgICAgfQoKICAgICAgICBpZih0aGlzLnNpcmVuICYmICF0aGlzLnNpcmV0KSB7CiAgICAgICAgICAgIHRoaXMuaHR0cCA9IHRoaXMuYXBpX2VudHJlcHJpc2UgKyB0aGlzLm9wdGlvbl9zaXJlbiArIHRoaXMuc2lyZW4KICAgICAgICAgICAgYXhpb3MuZ2V0KHRoaXMuaHR0cCkKICAgICAgICAgICAgLnRoZW4ocmVzcG9uc2UgPT4gewogICAgICAgICAgICAgICAgdGhpcy5maWx0ZXJTdGF0ZXMocmVzcG9uc2UuZGF0YSk7CiAgICAgICAgICAgIH0pCiAgICAgICAgfQogICAgfSwKCiAgICBtZXRob2RzOiB7CgogICAgICAgIHJlc2V0X3ZhcigpIHsKICAgICAgICAgICAgdGhpcy5zaXJldCA9ICcnOwogICAgICAgICAgICB0aGlzLnNpcmVuID0gJyc7CiAgICAgICAgICAgIHRoaXMuYWRyZXNzZTEgPSAnJzsKICAgICAgICAgICAgdGhpcy5hZHJlc3NlMiA9ICcnOwogICAgICAgICAgICB0aGlzLmFkcmVzc2UzID0gJyc7CiAgICAgICAgICAgIHRoaXMudmlsbGUgPSAnJzsKICAgICAgICAgICAgdGhpcy5wb3N0Y29kZSA9ICcnOwogICAgICAgICAgICB0aGlzLmxhdCA9ICcnOwogICAgICAgICAgICB0aGlzLmxvbiA9ICcnOwogICAgICAgICAgICB0aGlzLmh0dHAgPSAnJzsKCiAgICAgICAgICAgIGlmICgoaXNOYU4oZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ21hcCcpKSkpIHsKICAgICAgICAgICAgICAgICAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnbXltYXAnKS5yZW1vdmVDaGlsZChkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnbWFwJykpCiAgICAgICAgICAgIH0KICAgICAgICB9LAoKICAgICAgICBmaWx0ZXJTdGF0ZXMoc3RhdGVzKSB7CiAgICAgICAgICAgIHRoaXMuZmlsdGVyZWRTdGF0ZXMgPSBzdGF0ZXM7CiAgICAgICAgfSwKCiAgICAgICAgc2V0U3RhdGUoYWRyZXNzZTEsIHZpbGxlLCBwb3N0Y29kZSwgbG9uLCBsYXQpIHsKICAgICAgICAgICAgdGhpcy5hZHJlc3NlMSA9IGFkcmVzc2UxOwogICAgICAgICAgICB0aGlzLnZpbGxlID0gdmlsbGU7CiAgICAgICAgICAgIHRoaXMucG9zdGNvZGUgPSBwb3N0Y29kZTsKICAgICAgICAgICAgdGhpcy5tb2RhbCA9IGZhbHNlOyAKICAgICAgICAgICAgdGhpcy5sYXQgPSBsYXQ7CiAgICAgICAgICAgIHRoaXMubG9uID0gbG9uOwogICAgICAgIH0sCgogICAgICAgIGluaXRNYXAoKSB7CiAgICAgICAgICAgIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdteW1hcCcpLmlubmVySFRNTCA9ICI8ZGl2IGlkPSdtYXAnPjwvZGl2PiI7CiAgICAgICAgICAgIGxldCBteW1hcCA9IEwubWFwKCdtYXAnKS5zZXRWaWV3KFt0aGlzLmxhdCwgdGhpcy5sb25dLCAxOCk7CiAgICAgICAgICAgIEwudGlsZUxheWVyKCdodHRwczovL3tzfS50aWxlLm9wZW5zdHJlZXRtYXAub3JnL3t6fS97eH0ve3l9LnBuZycsIHsKICAgICAgICAgICAgICAgIGF0dHJpYnV0aW9uOiAnJmNvcHk7IDxhIGhyZWY9Imh0dHBzOi8vd3d3Lm9wZW5zdHJlZXRtYXAub3JnL2NvcHlyaWdodCI+T3BlblN0cmVldE1hcDwvYT4gY29udHJpYnV0b3JzJwogICAgICAgICAgICB9KS5hZGRUbyhteW1hcCk7CiAgICAgICAgICAgIEwubWFya2VyKFt0aGlzLmxhdCwgdGhpcy5sb25dKS5hZGRUbyhteW1hcCkKICAgICAgICAgICAgLmJpbmRQb3B1cCh0aGlzLmFkcmVzc2UxKQogICAgICAgICAgICAub3BlblBvcHVwKCk7CiAgICAgICAgfSwKCiAgICAgICAgcmVzZXRWQygpIHsKICAgICAgICAgICAgdGhpcy52aWxsZSA9ICcnOwogICAgICAgICAgICB0aGlzLnBvc3Rjb2RlID0gJyc7CiAgICAgICAgICAgIHRoaXMuc2lyZXQgPSAnJzsKICAgICAgICAgICAgdGhpcy5zaXJlbiA9ICcnOwogICAgICAgICAgICBpZiAoKGlzTmFOKGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdtYXAnKSkpKSB7CiAgICAgICAgICAgICAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnbXltYXAnKS5yZW1vdmVDaGlsZChkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnbWFwJykpCiAgICAgICAgICAgIH0KICAgICAgICB9LAogICAgICAgIHJlc2V0U2lyZXQoKSB7CiAgICAgICAgICAgIHRoaXMuc2lyZXQgPSAnJzsKICAgICAgICB9LAogICAgICAgIHJlc2V0U2lyZW4oKSB7CiAgICAgICAgICAgIHRoaXMuc2lyZW4gPSAnJzsKICAgICAgICB9LAogICAgfSwKCn0KCg=="},{"version":3,"sources":["ApiGouv.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAwfile":"ApiGouv.vue","sourceRoot":"src/components","sourcesContent":["<template>\n    <div id=\"form\">\n        <div class=\"sugdel\" @click=\"modal = false;\"></div>\n\n            <label for=\"inp\" class=\"inp\">\n\n                <input id=\"inp\" type=\"text\" name=\"doge\" list=\"browsers\" v-model=\"pays\" placeholder=\" \" class=\"field-input\" @focus=\"reset_var()\">\n\n                <span class=\"label\">Pays</span>\n                <span class=\"border\"></span>\n\n            </label>\n\n        <datalist id=\"browsers\">\n\n            <div v-if=\"continents\">\n\n                <div v-for=\"(continent, index) in continents\" :key=\"index\">\n\n                    <div v-for=\"(cont, index) in continent\" :key=\"`A-${index}`\">\n\n                        <div v-if=\"cont.translations.fr === 'France'\">\n                            <option>{{ cont.translations.fr }}</option>\n                        </div>\n\n                    </div>\n\n                    <option>-----------------------</option>\n\n                    <div v-for=\"(cont, index) in continent\" :key=\"`B-${index}`\">\n\n                        <div v-if=\"cont.translations.fr != 'France'\">\n                            <option>{{ cont.translations.fr }}</option>\n                        </div>\n\n                    </div>\n\n                </div>\n\n            </div>\n\n        </datalist>\n\n        <div v-if=\"pays === 'France'\" class=\"relative z-10\">\n\n            <button class=\"btn first\" v-on:click=\"(select_form = 'siret/siren') && reset_var()\">siret/siren</button>\n            <button class=\"btn first\" v-on:click=\"(select_form = 'adresse') && reset_var()\">adresse</button>\n\n            <div v-if=\"select_form === 'adresse'\">\n\n                    <label for=\"inp\" class=\"inp\">\n\n                        <input type=\"text\" id=\"inp\" placeholder=\" \" autocomplete=\"off\" v-model=\"adresse1\" @focus=\"modal = true; resetVC()\">\n                        <span class=\"label\">Adresse</span>\n                        <span class=\"border\"></span>\n\n                    </label>\n\n                    <div v-if=\"adresse1 && modal\">\n                            <ul class=\"suges\" v-for=\"(feature, x) in filteredStates.features\" :key=\"`A-${x}`\">\n                                <li @click=\"setState(feature.properties.name, feature.properties.city, feature.properties.postcode, feature.geometry.coordinates[0], feature.geometry.coordinates[1])\">\n                                    {{feature.properties.label}}\n                                </li>\n                            </ul>\n                    </div>\n\n                    <label for=\"inp\" class=\"inp\">\n\n                        <input id=\"inp\" type=\"text\" v-model=\"adresse2\" placeholder=\" \" @click=\"modal = false;\"/>\n                        <span class=\"label\">Adresse 2</span>\n                        <span class=\"border\"></span>\n\n                    </label>\n\n                    <label for=\"inp\" class=\"inp\">\n\n                        <input id=\"inp\" type=\"text\" v-model=\"adresse3\" placeholder=\" \" @click=\"modal = false;\"/>\n                        <span class=\"label\">Adresse 3</span>\n                        <span class=\"border\"></span>\n\n                    </label>\n\n                    <label for=\"inp\" class=\"inp\">\n\n                        <input id=\"inp\" type=\"text\" v-model=\"postcode\" placeholder=\" \" @click=\"modal = false;\"/>\n                        <span class=\"label\">Code Postal</span>\n                        <span class=\"border\"></span>\n                        \n                    </label>\n\n                    <label for=\"inp\" class=\"inp\">\n\n                        <input id=\"inp\" type=\"text\" v-model=\"ville\" placeholder=\" \" @click=\"modal = false;\"/>\n                        <span class=\"label\">Ville</span>\n                        <span class=\"border\"></span>\n                        \n                    </label>\n\n                <button class=\"btn first\" @click=\"initMap()\">valider</button>\n            </div>\n\n            <div v-if=\"select_form === 'siret/siren'\">\n\n                <label for=\"inp\" class=\"inp\">\n\n                    <input type=\"text\" autocomplete=\"off\" v-model=\"siret\" placeholder=\" \" @focus=\"resetSiren()\"/>\n                    <span class=\"label\">Siret</span>\n                    <span class=\"border\"></span>\n\n                </label>\n\n                <label for=\"inp\" class=\"inp\">\n\n                    <input type=\"text\" autocomplete=\"off\" v-model=\"siren\" placeholder=\" \" @focus=\"resetSiret()\"/>\n                    <span class=\"label\">Siren</span>\n                    <span class=\"border\"></span>\n\n                </label>\n\n                <button class=\"btn first\" @click=\"initMap()\">valider</button>\n            </div>\n            \n            <div id=\"mymap\"></div>\n        </div>\n\n        <div v-if=\"pays != 'France'\">\n\n            <div v-for=\"(continent, index) in continents\" :key=\"index\">\n\n                <div v-for=\"(cont, index) in continent\" :key=\"`B-${index}`\">\n\n                    <div v-if=\"pays === cont.translations.fr\">\n\n                        <label for=\"inp\" class=\"inp\">\n\n                            <input type=\"text\" id=\"inp\" v-model=\"adresse1\" placeholder=\" \" autocomplete=\"off\" @focus=\"resetVC()\">\n                            <span class=\"label\">Adresse</span>\n                            <span class=\"border\"></span>\n\n                        </label>\n\n                        <label for=\"inp\" class=\"inp\">\n\n                            <input id=\"inp\" type=\"text\" v-model=\"adresse2\" placeholder=\" \"/>\n                            <span class=\"label\">Adresse 2</span>\n                            <span class=\"border\"></span>\n\n                        </label>\n\n                        <label for=\"inp\" class=\"inp\">\n\n                            <input id=\"inp\" type=\"text\" v-model=\"adresse3\" placeholder=\" \"/>\n                            <span class=\"label\">Adresse 3</span>\n                            <span class=\"border\"></span>\n\n                        </label>\n\n                        <label for=\"inp\" class=\"inp\">\n\n                            <input id=\"inp\" type=\"text\" v-model=\"postcode\" placeholder=\" \"/>\n                            <span class=\"label\">postecode</span>\n                            <span class=\"border\"></span>\n                            \n                        </label>\n\n                        <label for=\"inp\" class=\"inp\">\n\n                            <input id=\"inp\" type=\"text\" v-model=\"ville\" placeholder=\" \"/>\n                            <span class=\"label\">ville</span>\n                            <span class=\"border\"></span>\n                            \n                        </label>\n\n                        <button class=\"btn first\">valider</button>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</template>\n\n\n<script>\n\n    import axios from 'axios';\n    import L from 'leaflet';\n\n    export default {\n        data() {\n\n            return {\n            api_adresse: \"https://api-adresse.data.gouv.fr/search/\",\n            api_country: \"https://restcountries.eu/rest/v2/region/\",\n            api_entreprise: \"https://entreprise.data.gouv.fr/api/sirene/v3/\",\n            option_siret: \"etablissements/\",\n            option_siren: \"unites_legales/\",    \n            option_adresse: \"?q=\",\n            option_limit: \"&limit=10\",\n            option_ville: \"&type=street\",\n            option_postcode: '&postcode=',\n            siret: '',\n            siren: '',\n            pays: '',\n            adresse1: '',\n            adresse2: '',\n            adresse3: '',\n            ville: '',\n            postcode: '',\n            lat: '',\n            lon: '',\n            http: '',\n            select_form: '',\n            searching: false,\n            modal: false,\n\n            states: [],\n            filteredStates: [],\n\n            continents:[],\n            Ncontinents:[\n                'europe',\n                'asia',\n                'africa',\n                'americas',\n                'oceania'\n            ],\n            xcontinent: 0,\n            }\n        },\n\n        created() {\n\n            if (this.xcontinent == 0) {\n                while (this.xcontinent < this.Ncontinents.length) {\n                    axios.get(this.api_country + this.Ncontinents[this.xcontinent])\n                    .then(response => {\n                        this.continents.push(response.data);\n                    })\n                    this.xcontinent = this.xcontinent + 1;\n                }\n            }\n        },\n\n        updated() {\n\n            if(this.adresse1){\n                this.http = this.api_adresse + this.option_adresse + this.adresse1\n\n                if(this.ville) {\n                    this.http = this.http + \"+\" + this.ville + this.option_ville\n                }\n                if (this.postcode) {\n                    this.http = this.http + this.option_postcode + this.postcode\n                }\n                axios.get(this.http)\n                .then(response => {\n                    this.filterStates(response.data);\n                })\n            }\n\n            if(this.siret && !this.siren) {\n                this.http = this.api_entreprise + this.option_siret + this.siret\n                axios.get(this.http)\n                .then(response => {\n                    this.filterStates(response.data);\n                })\n            }\n\n            if(this.siren && !this.siret) {\n                this.http = this.api_entreprise + this.option_siren + this.siren\n                axios.get(this.http)\n                .then(response => {\n                    this.filterStates(response.data);\n                })\n            }\n        },\n\n        methods: {\n\n            reset_var() {\n                this.siret = '';\n                this.siren = '';\n                this.adresse1 = '';\n                this.adresse2 = '';\n                this.adresse3 = '';\n                this.ville = '';\n                this.postcode = '';\n                this.lat = '';\n                this.lon = '';\n                this.http = '';\n\n                if ((isNaN(document.getElementById('map')))) {\n                        document.getElementById('mymap').removeChild(document.getElementById('map'))\n                }\n            },\n\n            filterStates(states) {\n                this.filteredStates = states;\n            },\n\n            setState(adresse1, ville, postcode, lon, lat) {\n                this.adresse1 = adresse1;\n                this.ville = ville;\n                this.postcode = postcode;\n                this.modal = false; \n                this.lat = lat;\n                this.lon = lon;\n            },\n\n            initMap() {\n                document.getElementById('mymap').innerHTML = \"<div id='map'></div>\";\n                let mymap = L.map('map').setView([this.lat, this.lon], 18);\n                L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {\n                    attribution: '&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'\n                }).addTo(mymap);\n                L.marker([this.lat, this.lon]).addTo(mymap)\n                .bindPopup(this.adresse1)\n                .openPopup();\n            },\n\n            resetVC() {\n                this.ville = '';\n                this.postcode = '';\n                this.siret = '';\n                this.siren = '';\n                if ((isNaN(document.getElementById('map')))) {\n                    document.getElementById('mymap').removeChild(document.getElementById('map'))\n                }\n            },\n            resetSiret() {\n                this.siret = '';\n            },\n            resetSiren() {\n                this.siren = '';\n            },\n        },\n\n    }\n\n</script>\n\n<style>\n\n@import\"../css/fichier.css\";\n\n</style>"]}]}