{"remainingRequest":"C:\\Users\\kryst\\Documents\\Projets_2019\\name\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\kryst\\Documents\\Projets_2019\\name\\src\\components\\ApiGouv.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\kryst\\Documents\\Projets_2019\\name\\src\\components\\ApiGouv.vue","mtime":1576614526654},{"path":"C:\\Users\\kryst\\Documents\\Projets_2019\\name\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1576166348000},{"path":"C:\\Users\\kryst\\Documents\\Projets_2019\\name\\node_modules\\babel-loader\\lib\\index.js","mtime":1576166348000},{"path":"C:\\Users\\kryst\\Documents\\Projets_2019\\name\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1576166348000},{"path":"C:\\Users\\kryst\\Documents\\Projets_2019\\name\\node_modules\\vue-loader\\lib\\index.js","mtime":1576166348000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCgppbXBvcnQgYXhpb3MgZnJvbSAnYXhpb3MnOwppbXBvcnQgTCBmcm9tICdsZWFmbGV0JzsKCmV4cG9ydCBkZWZhdWx0IHsKICAgIGRhdGEoKSB7CgogICAgICAgIHJldHVybiB7CiAgICAgICAgYXBpX2FkcmVzc2U6ICJodHRwczovL2FwaS1hZHJlc3NlLmRhdGEuZ291di5mci9zZWFyY2gvIiwKICAgICAgICBhcGlfY291bnRyeTogImh0dHBzOi8vcmVzdGNvdW50cmllcy5ldS9yZXN0L3YyL3JlZ2lvbi8iLAogICAgICAgIGFwaV9lbnRyZXByaXNlOiAiaHR0cHM6Ly9lbnRyZXByaXNlLmRhdGEuZ291di5mci9hcGkvc2lyZW5lL3YzLyIsCiAgICAgICAgb3B0aW9uX3NpcmV0OiAiZXRhYmxpc3NlbWVudHMvIiwKICAgICAgICBvcHRpb25fc2lyZW46ICJ1bml0ZXNfbGVnYWxlcy8iLCAgICAKICAgICAgICBvcHRpb25fYWRyZXNzZTogIj9xPSIsCiAgICAgICAgb3B0aW9uX2xpbWl0OiAiJmxpbWl0PTEwIiwKICAgICAgICBvcHRpb25fdmlsbGU6ICImdHlwZT1zdHJlZXQiLAogICAgICAgIG9wdGlvbl9wb3N0Y29kZTogJyZwb3N0Y29kZT0nLAogICAgICAgIHNpcmV0OiAnJywKICAgICAgICBzaXJlbjogJycsCiAgICAgICAgcGF5czogJycsCiAgICAgICAgYWRyZXNzZTE6ICcnLAogICAgICAgIGFkcmVzc2UyOiAnJywKICAgICAgICBhZHJlc3NlMzogJycsCiAgICAgICAgdmlsbGU6ICcnLAogICAgICAgIHBvc3Rjb2RlOiAnJywKICAgICAgICBodHRwOiAnJywKICAgICAgICBzZWxlY3RfZm9ybTogJycsCiAgICAgICAgc2VhcmNoaW5nOiBmYWxzZSwKICAgICAgICBtb2RhbDogZmFsc2UsCgogICAgICAgIGxvbjogJycsCiAgICAgICAgbGF0OiAnJywKCiAgICAgICAgc3RhdGVzOiBbXSwKICAgICAgICBmaWx0ZXJlZFN0YXRlczogW10sCgogICAgICAgIGNvbnRpbmVudHM6W10sCiAgICAgICAgTmNvbnRpbmVudHM6WwogICAgICAgICAgICAnZXVyb3BlJywKICAgICAgICAgICAgJ2FzaWEnLAogICAgICAgICAgICAnYWZyaWNhJywKICAgICAgICAgICAgJ2FtZXJpY2FzJywKICAgICAgICAgICAgJ29jZWFuaWEnCiAgICAgICAgXSwKICAgICAgICB4Y29udGluZW50OiAwLAogICAgICAgIH0KICAgIH0sCgogICAgY3JlYXRlZCgpIHsKCiAgICAgICAgaWYgKHRoaXMueGNvbnRpbmVudCA9PSAwKSB7CiAgICAgICAgICAgIHdoaWxlICh0aGlzLnhjb250aW5lbnQgPCB0aGlzLk5jb250aW5lbnRzLmxlbmd0aCkgewogICAgICAgICAgICAgICAgYXhpb3MuZ2V0KHRoaXMuYXBpX2NvdW50cnkgKyB0aGlzLk5jb250aW5lbnRzW3RoaXMueGNvbnRpbmVudF0pCiAgICAgICAgICAgICAgICAudGhlbihyZXNwb25zZSA9PiB7CiAgICAgICAgICAgICAgICAgICAgdGhpcy5jb250aW5lbnRzLnB1c2gocmVzcG9uc2UuZGF0YSk7CiAgICAgICAgICAgICAgICB9KQogICAgICAgICAgICAgICAgdGhpcy54Y29udGluZW50ID0gdGhpcy54Y29udGluZW50ICsgMTsKICAgICAgICAgICAgfQogICAgICAgIH0KICAgIH0sCgogICAgdXBkYXRlZCgpIHsKCiAgICAgICAgaWYodGhpcy5hZHJlc3NlMSl7CiAgICAgICAgICAgIHRoaXMuaHR0cCA9IHRoaXMuYXBpX2FkcmVzc2UgKyB0aGlzLm9wdGlvbl9hZHJlc3NlICsgdGhpcy5hZHJlc3NlMQoKICAgICAgICAgICAgaWYodGhpcy52aWxsZSkgewogICAgICAgICAgICAgICAgdGhpcy5odHRwID0gdGhpcy5odHRwICsgIisiICsgdGhpcy52aWxsZSArIHRoaXMub3B0aW9uX3ZpbGxlCiAgICAgICAgICAgIH0KICAgICAgICAgICAgaWYgKHRoaXMucG9zdGNvZGUpIHsKICAgICAgICAgICAgICAgIHRoaXMuaHR0cCA9IHRoaXMuaHR0cCArIHRoaXMub3B0aW9uX3Bvc3Rjb2RlICsgdGhpcy5wb3N0Y29kZQogICAgICAgICAgICB9CiAgICAgICAgICAgIGF4aW9zLmdldCh0aGlzLmh0dHApCiAgICAgICAgICAgIC50aGVuKHJlc3BvbnNlID0+IHsKICAgICAgICAgICAgICAgIHRoaXMuZmlsdGVyU3RhdGVzKHJlc3BvbnNlLmRhdGEpOwogICAgICAgICAgICB9KQogICAgICAgIH0KCiAgICAgICAgaWYodGhpcy5zaXJldCAmJiAhdGhpcy5zaXJlbikgewogICAgICAgICAgICB0aGlzLmh0dHAgPSB0aGlzLmFwaV9lbnRyZXByaXNlICsgdGhpcy5vcHRpb25fc2lyZXQgKyB0aGlzLnNpcmV0CiAgICAgICAgICAgIGF4aW9zLmdldCh0aGlzLmh0dHApCiAgICAgICAgICAgIC50aGVuKHJlc3BvbnNlID0+IHsKICAgICAgICAgICAgICAgIHRoaXMuZmlsdGVyU3RhdGVzKHJlc3BvbnNlLmRhdGEpOwogICAgICAgICAgICB9KQogICAgICAgIH0KCiAgICAgICAgaWYodGhpcy5zaXJlbiAmJiAhdGhpcy5zaXJldCkgewogICAgICAgICAgICB0aGlzLmh0dHAgPSB0aGlzLmFwaV9lbnRyZXByaXNlICsgdGhpcy5vcHRpb25fc2lyZW4gKyB0aGlzLnNpcmVuCiAgICAgICAgICAgIGF4aW9zLmdldCh0aGlzLmh0dHApCiAgICAgICAgICAgIC50aGVuKHJlc3BvbnNlID0+IHsKICAgICAgICAgICAgICAgIHRoaXMuZmlsdGVyU3RhdGVzKHJlc3BvbnNlLmRhdGEpOwogICAgICAgICAgICB9KQogICAgICAgIH0KCiAgICB9LAoKICAgIG1ldGhvZHM6IHsKCiAgICAgICAgZmlsdGVyU3RhdGVzKHN0YXRlcykgewogICAgICAgICAgICB0aGlzLmZpbHRlcmVkU3RhdGVzID0gc3RhdGVzOwogICAgICAgIH0sCgogICAgICAgIHNldFN0YXRlKGFkcmVzc2UxLCB2aWxsZSwgcG9zdGNvZGUsIGxvbiwgbGF0KSB7CiAgICAgICAgICAgIHRoaXMuYWRyZXNzZTEgPSBhZHJlc3NlMTsKICAgICAgICAgICAgdGhpcy52aWxsZSA9IHZpbGxlOwogICAgICAgICAgICB0aGlzLnBvc3Rjb2RlID0gcG9zdGNvZGU7CiAgICAgICAgICAgIHRoaXMubW9kYWwgPSBmYWxzZTsKICAgICAgICAgICAgdGhpcy5pbml0TWFwKGxvbiwgbGF0KTsKICAgICAgICB9LAoKICAgICAgICBpbml0TWFwKGxvbiwgbGF0KSB7CiAgICAgICAgICAgIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdteW1hcCcpLmlubmVySFRNTCA9ICI8ZGl2IGlkPSdtYXAnPjwvZGl2PiI7CiAgICAgICAgICAgIGxldCBteW1hcCA9IEwubWFwKCdtYXAnKS5zZXRWaWV3KFtsYXQsIGxvbl0sIDE4KTsKICAgICAgICAgICAgTC50aWxlTGF5ZXIoJ2h0dHBzOi8ve3N9LnRpbGUub3BlbnN0cmVldG1hcC5vcmcve3p9L3t4fS97eX0ucG5nJywgewogICAgICAgICAgICAgICAgYXR0cmlidXRpb246ICcmY29weTsgPGEgaHJlZj0iaHR0cHM6Ly93d3cub3BlbnN0cmVldG1hcC5vcmcvY29weXJpZ2h0Ij5PcGVuU3RyZWV0TWFwPC9hPiBjb250cmlidXRvcnMnCiAgICAgICAgICAgIH0pLmFkZFRvKG15bWFwKTsKICAgICAgICAgICAgTC5tYXJrZXIoW2xhdCwgbG9uXSkuYWRkVG8obXltYXApCiAgICAgICAgICAgIC5iaW5kUG9wdXAodGhpcy5hZHJlc3NlMSkKICAgICAgICAgICAgLm9wZW5Qb3B1cCgpOwogICAgICAgIH0sCgogICAgICAgIHJlc2V0VkMoKSB7CiAgICAgICAgICAgIHRoaXMudmlsbGUgPSAnJywKICAgICAgICAgICAgdGhpcy5wb3N0Y29kZSA9ICcnCiAgICAgICAgfQoKICAgIH0sCgp9Cgo="},{"version":3,"sources":["ApiGouv.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAyfile":"ApiGouv.vue","sourceRoot":"src/components","sourcesContent":["<template>\r\n    <div id=\"form\">\r\n\r\n            <label for=\"inp\" class=\"inp\">\r\n\r\n                <input id=\"inp\" type=\"text\" name=\"doge\" list=\"browsers\" v-model=\"pays\" placeholder=\" \" class=\"field-input\">\r\n\r\n                <span class=\"label\">Pays</span>\r\n                <span class=\"border\"></span>\r\n\r\n            </label>\r\n\r\n            \r\n\r\n        <datalist id=\"browsers\">\r\n\r\n            <div v-if=\"continents\">\r\n\r\n                <div v-for=\"(continent, index) in continents\" :key=\"index\">\r\n\r\n                    <div v-for=\"(cont, index) in continent\" :key=\"`A-${index}`\">\r\n\r\n                        <div v-if=\"cont.translations.fr === 'France'\">\r\n                            <option>{{ cont.translations.fr }}</option>\r\n                        </div>\r\n\r\n                    </div>\r\n\r\n                    <option>-----------------------</option>\r\n\r\n                    <div v-for=\"(cont, index) in continent\" :key=\"`B-${index}`\">\r\n\r\n                        <div v-if=\"cont.translations.fr != 'France'\">\r\n                            <option>{{ cont.translations.fr }}</option>\r\n                        </div>\r\n\r\n                    </div>\r\n\r\n                </div>\r\n\r\n            </div>\r\n\r\n        </datalist>\r\n\r\n        <div v-if=\"pays === 'France'\">\r\n            <button class=\"btn first\" v-on:click=\"select_form = 'siret/siren'\">siret/siren</button>\r\n            <button class=\"btn first\" v-on:click=\"select_form = 'adresse'\">adresse</button>\r\n\r\n            <div v-if=\"select_form === 'adresse'\">\r\n\r\n                <div @click=\"modal = false\"></div>\r\n\r\n                    <label for=\"inp\" class=\"inp\">\r\n\r\n                        <input type=\"text\" id=\"inp\" placeholder=\" \" autocomplete=\"off\" v-model=\"adresse1\" @focus=\"modal = true; resetVC()\">\r\n                        <span class=\"label\">Adresse</span>\r\n                        <span class=\"border\"></span>\r\n\r\n                    </label>\r\n\r\n                    <label for=\"inp\" class=\"inp\">\r\n\r\n                        <input id=\"inp\" type=\"text\" v-model=\"adresse2\" placeholder=\" \"/>\r\n                        <span class=\"label\">Adresse 2</span>\r\n                        <span class=\"border\"></span>\r\n\r\n                    </label>\r\n\r\n                    <label for=\"inp\" class=\"inp\">\r\n\r\n                        <input id=\"inp\" type=\"text\" v-model=\"adresse3\" placeholder=\" \"/>\r\n                        <span class=\"label\">Adresse 3</span>\r\n                        <span class=\"border\"></span>\r\n\r\n                    </label>\r\n\r\n                    <label for=\"inp\" class=\"inp\">\r\n\r\n                        <input id=\"inp\" type=\"text\" v-model=\"postcode\" placeholder=\" \"/>\r\n                        <span class=\"label\">Code Postal</span>\r\n                        <span class=\"border\"></span>\r\n                        \r\n                    </label>\r\n\r\n                    \r\n\r\n\r\n                    <label for=\"inp\" class=\"inp\">\r\n\r\n                        <input id=\"inp\" type=\"text\" v-model=\"ville\" placeholder=\" \"/>\r\n                        <span class=\"label\">Ville</span>\r\n                        <span class=\"border\"></span>\r\n                        \r\n                    </label>\r\n                    \r\n\r\n                    \r\n\r\n                <div v-if=\"adresse1 && modal\">\r\n\r\n                    <div style=\"cursor:pointer;\" v-for=\"(feature, x) in filteredStates.features\" :key=\"`A-${x}`\">\r\n\r\n                        <ul>\r\n                            <li @click=\"setState(feature.properties.name, feature.properties.city, feature.properties.postcode, feature.geometry.coordinates[0], feature.geometry.coordinates[1])\">\r\n\r\n                                {{feature.properties.label}}\r\n                            </li>\r\n                        </ul>\r\n\r\n                    </div>\r\n\r\n                </div>\r\n                <button class=\"btn first\" v-on:click=\"validate = ''\">Valider</button>\r\n            </div>\r\n\r\n            <div v-if=\"select_form === 'siret/siren'\">\r\n\r\n\r\n                <label for=\"inp\" class=\"inp\">\r\n\r\n                        <input id=\"inp\" type=\"text\" placeholder=\" \" autocomplete=\"off\" v-model=\"siret\" @focus=\"modal = true\"/>\r\n                        <span class=\"label\">Siret</span>\r\n                        <span class=\"border\"></span>\r\n\r\n                </label>\r\n                <label for=\"inp\" class=\"inp\">\r\n\r\n                        <input id=\"inp\" type=\"text\" placeholder=\" \" autocomplete=\"off\" v-model=\"siren\" @focus=\"modal = true\"/>\r\n                        <span class=\"label\">Siren</span>\r\n                        <span class=\"border\"></span>\r\n\r\n                </label>\r\n                \r\n                <div v-if=\"(siren && !siret) && modal\">\r\n                    <ul>\r\n                        <li @click=\"setState(filteredStates.unite_legale.etablissements[0].geo_l4, filteredStates.unite_legale.etablissements[0].libelle_commune, filteredStates.unite_legale.etablissements[0].code_postal, filteredStates.unite_legale.etablissements[0].longitude, filteredStates.unite_legale.etablissements[0].latitude)\">\r\n                            {{filteredStates.unite_legale.etablissements[0].geo_adresse}}\r\n                        </li>\r\n                    </ul>\r\n                </div>\r\n                <div v-if=\"(siret && !siren) && modal\">\r\n                    <ul>\r\n                        <li @click=\"setState(filteredStates.etablissement.geo_l4, filteredStates.etablissement.libelle_commune, filteredStates.etablissement.code_postal, filteredStates.etablissement.longitude, filteredStates.etablissement.latitude)\">\r\n                            {{filteredStates.etablissement.geo_adresse}}\r\n                        </li>\r\n                    </ul>\r\n                </div>\r\n                <button class=\"btn first\" v-on:click=\"validate = ''\">Valider</button>\r\n            </div>\r\n            \r\n            <div id=\"mymap\"></div>\r\n\r\n        </div>\r\n\r\n        <div v-if=\"pays != 'France'\">\r\n\r\n            <div v-for=\"(continent, index) in continents\" :key=\"index\">\r\n\r\n                <div v-for=\"(cont, index) in continent\" :key=\"`B-${index}`\">\r\n\r\n                    <div v-if=\"pays === cont.translations.fr\">\r\n\r\n                        <label for=\"inp\" class=\"inp\">\r\n\r\n                            <input type=\"text\" id=\"inp\" v-model=\"adresse1\" placeholder=\" \" autocomplete=\"off\" @focus=\"modal = true; resetVC()\">\r\n                            <span class=\"label\">Adresse</span>\r\n                            <span class=\"border\"></span>\r\n\r\n                        </label>\r\n\r\n                        <label for=\"inp\" class=\"inp\">\r\n\r\n                            <input id=\"inp\" type=\"text\" v-model=\"adresse2\" placeholder=\" \"/>\r\n                            <span class=\"label\">Adresse 2</span>\r\n                            <span class=\"border\"></span>\r\n\r\n                        </label>\r\n\r\n                        <label for=\"inp\" class=\"inp\">\r\n\r\n                            <input id=\"inp\" type=\"text\" v-model=\"adresse3\" placeholder=\" \"/>\r\n                            <span class=\"label\">Adresse 3</span>\r\n                            <span class=\"border\"></span>\r\n\r\n                        </label>\r\n\r\n                        <label for=\"inp\" class=\"inp\">\r\n\r\n                            <input id=\"inp\" type=\"text\" v-model=\"postcode\" placeholder=\" \"/>\r\n                            <span class=\"label\">Code Postal</span>\r\n                            <span class=\"border\"></span>\r\n                            \r\n                        </label>\r\n\r\n                        <label for=\"inp\" class=\"inp\">\r\n\r\n                            <input id=\"inp\" type=\"text\" v-model=\"ville\" placeholder=\" \"/>\r\n                            <span class=\"label\">Ville</span>\r\n                            <span class=\"border\"></span>\r\n                            \r\n                        </label>\r\n\r\n                    </div>\r\n\r\n                </div>\r\n\r\n            </div>\r\n\r\n        </div>\r\n\r\n    </div>\r\n\r\n</template>\r\n\r\n\r\n<script>\r\n\r\n    import axios from 'axios';\r\n    import L from 'leaflet';\r\n\r\n    export default {\r\n        data() {\r\n\r\n            return {\r\n            api_adresse: \"https://api-adresse.data.gouv.fr/search/\",\r\n            api_country: \"https://restcountries.eu/rest/v2/region/\",\r\n            api_entreprise: \"https://entreprise.data.gouv.fr/api/sirene/v3/\",\r\n            option_siret: \"etablissements/\",\r\n            option_siren: \"unites_legales/\",    \r\n            option_adresse: \"?q=\",\r\n            option_limit: \"&limit=10\",\r\n            option_ville: \"&type=street\",\r\n            option_postcode: '&postcode=',\r\n            siret: '',\r\n            siren: '',\r\n            pays: '',\r\n            adresse1: '',\r\n            adresse2: '',\r\n            adresse3: '',\r\n            ville: '',\r\n            postcode: '',\r\n            http: '',\r\n            select_form: '',\r\n            searching: false,\r\n            modal: false,\r\n\r\n            lon: '',\r\n            lat: '',\r\n\r\n            states: [],\r\n            filteredStates: [],\r\n\r\n            continents:[],\r\n            Ncontinents:[\r\n                'europe',\r\n                'asia',\r\n                'africa',\r\n                'americas',\r\n                'oceania'\r\n            ],\r\n            xcontinent: 0,\r\n            }\r\n        },\r\n\r\n        created() {\r\n\r\n            if (this.xcontinent == 0) {\r\n                while (this.xcontinent < this.Ncontinents.length) {\r\n                    axios.get(this.api_country + this.Ncontinents[this.xcontinent])\r\n                    .then(response => {\r\n                        this.continents.push(response.data);\r\n                    })\r\n                    this.xcontinent = this.xcontinent + 1;\r\n                }\r\n            }\r\n        },\r\n\r\n        updated() {\r\n\r\n            if(this.adresse1){\r\n                this.http = this.api_adresse + this.option_adresse + this.adresse1\r\n\r\n                if(this.ville) {\r\n                    this.http = this.http + \"+\" + this.ville + this.option_ville\r\n                }\r\n                if (this.postcode) {\r\n                    this.http = this.http + this.option_postcode + this.postcode\r\n                }\r\n                axios.get(this.http)\r\n                .then(response => {\r\n                    this.filterStates(response.data);\r\n                })\r\n            }\r\n\r\n            if(this.siret && !this.siren) {\r\n                this.http = this.api_entreprise + this.option_siret + this.siret\r\n                axios.get(this.http)\r\n                .then(response => {\r\n                    this.filterStates(response.data);\r\n                })\r\n            }\r\n\r\n            if(this.siren && !this.siret) {\r\n                this.http = this.api_entreprise + this.option_siren + this.siren\r\n                axios.get(this.http)\r\n                .then(response => {\r\n                    this.filterStates(response.data);\r\n                })\r\n            }\r\n\r\n        },\r\n\r\n        methods: {\r\n\r\n            filterStates(states) {\r\n                this.filteredStates = states;\r\n            },\r\n\r\n            setState(adresse1, ville, postcode, lon, lat) {\r\n                this.adresse1 = adresse1;\r\n                this.ville = ville;\r\n                this.postcode = postcode;\r\n                this.modal = false;\r\n                this.initMap(lon, lat);\r\n            },\r\n\r\n            initMap(lon, lat) {\r\n                document.getElementById('mymap').innerHTML = \"<div id='map'></div>\";\r\n                let mymap = L.map('map').setView([lat, lon], 18);\r\n                L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {\r\n                    attribution: '&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'\r\n                }).addTo(mymap);\r\n                L.marker([lat, lon]).addTo(mymap)\r\n                .bindPopup(this.adresse1)\r\n                .openPopup();\r\n            },\r\n\r\n            resetVC() {\r\n                this.ville = '',\r\n                this.postcode = ''\r\n            }\r\n\r\n        },\r\n\r\n    }\r\n\r\n</script>\r\n\r\n<style>\r\n\r\n@import\"../css/fichier.css\"\r\n\r\n</style>"]}]}