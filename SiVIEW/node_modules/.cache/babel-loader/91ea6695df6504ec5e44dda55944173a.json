{"remainingRequest":"C:\\Users\\kryst\\Documents\\Projets_2019\\apitest\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\kryst\\Documents\\Projets_2019\\apitest\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\kryst\\Documents\\Projets_2019\\apitest\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\kryst\\Documents\\Projets_2019\\apitest\\src\\components\\ApiGouv.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\kryst\\Documents\\Projets_2019\\apitest\\src\\components\\ApiGouv.vue","mtime":1576574829662},{"path":"C:\\Users\\kryst\\Documents\\Projets_2019\\apitest\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1576166348000},{"path":"C:\\Users\\kryst\\Documents\\Projets_2019\\apitest\\node_modules\\babel-loader\\lib\\index.js","mtime":1576166348000},{"path":"C:\\Users\\kryst\\Documents\\Projets_2019\\apitest\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1576166348000},{"path":"C:\\Users\\kryst\\Documents\\Projets_2019\\apitest\\node_modules\\vue-loader\\lib\\index.js","mtime":1576166348000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkubWFwIjsKLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KaW1wb3J0IGF4aW9zIGZyb20gJ2F4aW9zJzsKaW1wb3J0IEwgZnJvbSAnbGVhZmxldCc7CmV4cG9ydCBkZWZhdWx0IHsKICBkYXRhOiBmdW5jdGlvbiBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgYXBpX2FkcmVzc2U6ICJodHRwczovL2FwaS1hZHJlc3NlLmRhdGEuZ291di5mci9zZWFyY2gvIiwKICAgICAgYXBpX2NvdW50cnk6ICJodHRwczovL3Jlc3Rjb3VudHJpZXMuZXUvcmVzdC92Mi9yZWdpb24vIiwKICAgICAgYXBpX2NvaW5kZXNrOiAiaHR0cHM6Ly9hcGkuY29pbmRlc2suY29tL3YxL2JwaS9jdXJyZW50cHJpY2UuanNvbiIsCiAgICAgIG9wdGlvbl9hZHJlc3NlOiAiP3E9IiwKICAgICAgb3B0aW9uX2xpbWl0OiAiJmxpbWl0PTEwIiwKICAgICAgb3B0aW9uX3ZpbGxlOiAiJnR5cGU9c3RyZWV0IiwKICAgICAgb3B0aW9uX3Bvc3Rjb2RlOiAnJnBvc3Rjb2RlPScsCiAgICAgIHBheXM6ICcnLAogICAgICBpbmZvOiAnJywKICAgICAgYWRyZXNzZTE6ICcnLAogICAgICBhZHJlc3NlMjogJycsCiAgICAgIGFkcmVzc2UzOiAnJywKICAgICAgdmlsbGU6ICcnLAogICAgICBwb3N0Y29kZTogJycsCiAgICAgIGh0dHA6ICcnLAogICAgICBzZWxlY3RfcGF5czogZmFsc2UsCiAgICAgIHNlYXJjaGluZzogZmFsc2UsCiAgICAgIG1vZGFsOiBmYWxzZSwKICAgICAgbG9uOiAnJywKICAgICAgbGF0OiAnJywKICAgICAgc3RhdGVzOiBbXSwKICAgICAgZmlsdGVyZWRTdGF0ZXM6IFtdLAogICAgICBjb250aW5lbnRzOiBbXSwKICAgICAgTmNvbnRpbmVudHM6IFsnZXVyb3BlJywgJ2FzaWEnLCAnYWZyaWNhJywgJ2FtZXJpY2FzJywgJ29jZWFuaWEnXSwKICAgICAgeGNvbnRpbmVudDogMAogICAgfTsKICB9LAogIGNyZWF0ZWQ6IGZ1bmN0aW9uIGNyZWF0ZWQoKSB7CiAgICB2YXIgX3RoaXMgPSB0aGlzOwoKICAgIGF4aW9zLmdldCgnaHR0cHM6Ly9hcGkuY29pbmRlc2suY29tL3YxL2JwaS9jdXJyZW50cHJpY2UuanNvbicpLnRoZW4oZnVuY3Rpb24gKHJlc3BvbnNlKSB7CiAgICAgIHJldHVybiBfdGhpcy5pbmZvID0gcmVzcG9uc2U7CiAgICB9KTsKCiAgICBpZiAodGhpcy54Y29udGluZW50ID09IDApIHsKICAgICAgd2hpbGUgKHRoaXMueGNvbnRpbmVudCA8IHRoaXMuTmNvbnRpbmVudHMubGVuZ3RoKSB7CiAgICAgICAgYXhpb3MuZ2V0KHRoaXMuYXBpX2NvdW50cnkgKyB0aGlzLk5jb250aW5lbnRzW3RoaXMueGNvbnRpbmVudF0pLnRoZW4oZnVuY3Rpb24gKHJlc3BvbnNlKSB7CiAgICAgICAgICBfdGhpcy5jb250aW5lbnRzLnB1c2gocmVzcG9uc2UuZGF0YSk7CiAgICAgICAgfSk7CiAgICAgICAgdGhpcy54Y29udGluZW50ID0gdGhpcy54Y29udGluZW50ICsgMTsKICAgICAgfQogICAgfQogIH0sCiAgdXBkYXRlZDogZnVuY3Rpb24gdXBkYXRlZCgpIHsKICAgIHZhciBfdGhpczIgPSB0aGlzOwoKICAgIGlmICh0aGlzLmFkcmVzc2UxKSB7CiAgICAgIHRoaXMuaHR0cCA9IHRoaXMuYXBpX2FkcmVzc2UgKyB0aGlzLm9wdGlvbl9hZHJlc3NlICsgdGhpcy5hZHJlc3NlMTsKCiAgICAgIGlmICh0aGlzLnZpbGxlKSB7CiAgICAgICAgdGhpcy5odHRwID0gdGhpcy5odHRwICsgIisiICsgdGhpcy52aWxsZSArIHRoaXMub3B0aW9uX3ZpbGxlOwogICAgICB9CgogICAgICBpZiAodGhpcy5wb3N0Y29kZSkgewogICAgICAgIHRoaXMuaHR0cCA9IHRoaXMuaHR0cCArIHRoaXMub3B0aW9uX3Bvc3Rjb2RlICsgdGhpcy5wb3N0Y29kZTsKICAgICAgfQogICAgfQoKICAgIGlmICh0aGlzLmFkcmVzc2UxKSB7CiAgICAgIGF4aW9zLmdldCh0aGlzLmh0dHApLnRoZW4oZnVuY3Rpb24gKHJlc3BvbnNlKSB7CiAgICAgICAgX3RoaXMyLmZpbHRlclN0YXRlcyhyZXNwb25zZS5kYXRhKTsKICAgICAgfSk7CiAgICB9CiAgfSwKICBtZXRob2RzOiB7CiAgICBmaWx0ZXJTdGF0ZXM6IGZ1bmN0aW9uIGZpbHRlclN0YXRlcyhzdGF0ZXMpIHsKICAgICAgdGhpcy5maWx0ZXJlZFN0YXRlcyA9IHN0YXRlczsKICAgIH0sCiAgICBzZXRTdGF0ZTogZnVuY3Rpb24gc2V0U3RhdGUoYWRyZXNzZTEsIHZpbGxlLCBwb3N0Y29kZSwgbG9uLCBsYXQpIHsKICAgICAgdGhpcy5hZHJlc3NlMSA9IGFkcmVzc2UxOwogICAgICB0aGlzLnZpbGxlID0gdmlsbGU7CiAgICAgIHRoaXMucG9zdGNvZGUgPSBwb3N0Y29kZTsKICAgICAgdGhpcy5tb2RhbCA9IGZhbHNlOwogICAgICB0aGlzLmluaXRNYXAobG9uLCBsYXQpOwogICAgfSwKICAgIGluaXRNYXA6IGZ1bmN0aW9uIGluaXRNYXAobG9uLCBsYXQpIHsKICAgICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ215bWFwJykuaW5uZXJIVE1MID0gIjxkaXYgaWQ9J21hcCc+PC9kaXY+IjsKICAgICAgdmFyIG15bWFwID0gTC5tYXAoJ21hcCcpLnNldFZpZXcoW2xhdCwgbG9uXSwgMTgpOwogICAgICBMLnRpbGVMYXllcignaHR0cHM6Ly97c30udGlsZS5vcGVuc3RyZWV0bWFwLm9yZy97en0ve3h9L3t5fS5wbmcnLCB7CiAgICAgICAgYXR0cmlidXRpb246ICcmY29weTsgPGEgaHJlZj0iaHR0cHM6Ly93d3cub3BlbnN0cmVldG1hcC5vcmcvY29weXJpZ2h0Ij5PcGVuU3RyZWV0TWFwPC9hPiBjb250cmlidXRvcnMnCiAgICAgIH0pLmFkZFRvKG15bWFwKTsKICAgICAgTC5tYXJrZXIoW2xhdCwgbG9uXSkuYWRkVG8obXltYXApLmJpbmRQb3B1cCh0aGlzLmFkcmVzc2UxKS5vcGVuUG9wdXAoKTsKICAgIH0sCiAgICByZXNldFZDOiBmdW5jdGlvbiByZXNldFZDKCkgewogICAgICB0aGlzLnZpbGxlID0gJycsIHRoaXMucG9zdGNvZGUgPSAnJzsKICAgIH0KICB9Cn07"},{"version":3,"sources":["ApiGouv.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n    <div>\r\n        <input list=\"browsers\" v-model=\"pays\">\r\n\r\n        <datalist id=\"browsers\">\r\n            <div v-if=\"continents\">\r\n                <div v-for=\"(continent, index) in continents\" :key=\"index\">\r\n                    <div v-for=\"(cont, index) in continent\" :key=\"`A-${index}`\">\r\n                        <div v-if=\"cont.translations.fr === 'France'\">\r\n                            <option>{{ cont.translations.fr }}</option>\r\n                        </div>\r\n                    </div>\r\n                    <option>-----------------------</option>\r\n                    <div v-for=\"(cont, index) in continent\" :key=\"`B-${index}`\">\r\n                        <div v-if=\"cont.translations.fr != 'France'\">\r\n                            <option>{{ cont.translations.fr }}</option>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </datalist>\r\n\r\n        <div v-if=\"pays === 'France'\">\r\n            <div @click=\"modal = false\"></div>\r\n\r\n            <input type=\"text\" autocomplete=\"off\" v-model=\"adresse1\" placeholder=\"adresse 1\" @focus=\"modal = true; resetVC()\"/>\r\n            <input v-model=\"adresse2\" placeholder=\"adresse 2\"/>\r\n            <input v-model=\"adresse3\" placeholder=\"adresse 3\"/>\r\n            <input v-model=\"postcode\" placeholder=\"code postal\"/>\r\n            <input v-model=\"ville\" placeholder=\"ville\"/>\r\n\r\n            <div v-if=\"adresse1 && modal\">\r\n                <div style=\"cursor:pointer;\" v-for=\"(feature, x) in filteredStates.features\" :key=\"`A-${x}`\">\r\n                    <ul>\r\n                        <li @click=\"setState(feature.properties.name, feature.properties.city, feature.properties.postcode, feature.geometry.coordinates[0], feature.geometry.coordinates[1])\">\r\n\r\n                            {{feature.properties.label}}\r\n                        </li>\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n            <div id=\"mymap\"></div>\r\n        </div>\r\n\r\n        <div v-if=\"pays != 'France'\">\r\n            <div v-for=\"(continent, index) in continents\" :key=\"index\">\r\n                <div v-for=\"(cont, index) in continent\" :key=\"`B-${index}`\">\r\n                    <div v-if=\"pays === cont.translations.fr\">\r\n                        <input v-model=\"adresse1\" placeholder=\"adresse 1\"/>\r\n                        <input v-model=\"adresse2\" placeholder=\"adresse 2\"/>\r\n                        <input v-model=\"adresse3\" placeholder=\"adresse 3\"/>\r\n                        <input v-model=\"postcode\" placeholder=\"code postal\"/>\r\n                        <input v-model=\"ville\" placeholder=\"ville\"/>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <p>{{ info }}</p>\r\n    </div>\r\n</template>\r\n\r\n\r\n<script>\r\n    import axios from 'axios';\r\n    import L from 'leaflet';\r\n\r\n    export default {\r\n        data() {\r\n            return {\r\n            api_adresse: \"https://api-adresse.data.gouv.fr/search/\",\r\n            api_country: \"https://restcountries.eu/rest/v2/region/\",\r\n            api_coindesk: \"https://api.coindesk.com/v1/bpi/currentprice.json\",\r\n            option_adresse: \"?q=\",\r\n            option_limit: \"&limit=10\",\r\n            option_ville: \"&type=street\",\r\n            option_postcode: '&postcode=',\r\n            pays: '',\r\n            info:'',\r\n            adresse1: '',\r\n            adresse2: '',\r\n            adresse3: '',\r\n            ville: '',\r\n            postcode: '',\r\n            http: '',\r\n            select_pays: false,\r\n            searching: false,\r\n            modal: false,\r\n\r\n            lon: '',\r\n            lat: '',\r\n\r\n            states: [],\r\n            filteredStates: [],\r\n\r\n            continents:[],\r\n            Ncontinents:[\r\n                'europe',\r\n                'asia',\r\n                'africa',\r\n                'americas',\r\n                'oceania'\r\n            ],\r\n            xcontinent: 0,\r\n            }\r\n        },\r\n        created() {\r\n            axios\r\n            .get('https://api.coindesk.com/v1/bpi/currentprice.json')\r\n            .then(response => (this.info = response))\r\n            if (this.xcontinent == 0) {\r\n                while (this.xcontinent < this.Ncontinents.length) {\r\n                    axios.get(this.api_country + this.Ncontinents[this.xcontinent])\r\n                    .then(response => {\r\n                        this.continents.push(response.data);\r\n                    })\r\n                    this.xcontinent = this.xcontinent + 1;\r\n                }\r\n            }\r\n        },\r\n        updated() {\r\n            if(this.adresse1){\r\n                this.http = this.api_adresse + this.option_adresse + this.adresse1\r\n\r\n                if(this.ville) {\r\n                    this.http = this.http + \"+\" + this.ville + this.option_ville\r\n                }\r\n                if (this.postcode) {\r\n                    this.http = this.http + this.option_postcode + this.postcode\r\n                }\r\n            }\r\n\r\n            if (this.adresse1) {\r\n                axios.get(this.http)\r\n                .then(response => {\r\n                    this.filterStates(response.data);\r\n                })\r\n            }\r\n            \r\n        },\r\n        methods: {\r\n            filterStates(states) {\r\n                this.filteredStates = states;\r\n            },\r\n            setState(adresse1, ville, postcode, lon, lat) {\r\n                this.adresse1 = adresse1;\r\n                this.ville = ville;\r\n                this.postcode = postcode;\r\n                this.modal = false;\r\n                this.initMap(lon, lat);\r\n            },\r\n            initMap(lon, lat) {\r\n                document.getElementById('mymap').innerHTML = \"<div id='map'></div>\";\r\n                let mymap = L.map('map').setView([lat, lon], 18);\r\n                L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {\r\n                    attribution: '&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'\r\n                }).addTo(mymap);\r\n                L.marker([lat, lon]).addTo(mymap)\r\n                .bindPopup(this.adresse1)\r\n                .openPopup();\r\n            },\r\n            resetVC() {\r\n                this.ville = '',\r\n                this.postcode = ''\r\n            }\r\n        },\r\n    }\r\n</script>\r\n\r\n<style>\r\n#map {\r\n  position: relative;\r\n  padding: 0;\r\n  width: 1200px;\r\n  height: 600px;\r\n  margin-left: auto;\r\n  margin-right: auto;\r\n}\r\n\r\n</style>"],"sourceRoot":"src/components"}]}