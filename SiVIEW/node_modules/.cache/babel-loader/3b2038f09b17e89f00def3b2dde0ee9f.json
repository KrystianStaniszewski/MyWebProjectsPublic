{"remainingRequest":"C:\\Users\\kryst\\Documents\\Projets_2019\\group-745061\\name\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\kryst\\Documents\\Projets_2019\\group-745061\\name\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\kryst\\Documents\\Projets_2019\\group-745061\\name\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\kryst\\Documents\\Projets_2019\\group-745061\\name\\src\\components\\ApiGouv.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\kryst\\Documents\\Projets_2019\\group-745061\\name\\src\\components\\ApiGouv.vue","mtime":1576745670787},{"path":"C:\\Users\\kryst\\Documents\\Projets_2019\\group-745061\\name\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1576166348000},{"path":"C:\\Users\\kryst\\Documents\\Projets_2019\\group-745061\\name\\node_modules\\babel-loader\\lib\\index.js","mtime":1576166348000},{"path":"C:\\Users\\kryst\\Documents\\Projets_2019\\group-745061\\name\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1576166348000},{"path":"C:\\Users\\kryst\\Documents\\Projets_2019\\group-745061\\name\\node_modules\\vue-loader\\lib\\index.js","mtime":1576166348000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkubWFwIjsKLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KaW1wb3J0IGF4aW9zIGZyb20gJ2F4aW9zJzsKaW1wb3J0IEwgZnJvbSAnbGVhZmxldCc7CmV4cG9ydCBkZWZhdWx0IHsKICBkYXRhOiBmdW5jdGlvbiBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgYXBpX2FkcmVzc2U6ICJodHRwczovL2FwaS1hZHJlc3NlLmRhdGEuZ291di5mci9zZWFyY2gvIiwKICAgICAgYXBpX2NvdW50cnk6ICJodHRwczovL3Jlc3Rjb3VudHJpZXMuZXUvcmVzdC92Mi9yZWdpb24vIiwKICAgICAgYXBpX2VudHJlcHJpc2U6ICJodHRwczovL2VudHJlcHJpc2UuZGF0YS5nb3V2LmZyL2FwaS9zaXJlbmUvdjMvIiwKICAgICAgb3B0aW9uX3NpcmV0OiAiZXRhYmxpc3NlbWVudHMvIiwKICAgICAgb3B0aW9uX3NpcmVuOiAidW5pdGVzX2xlZ2FsZXMvIiwKICAgICAgb3B0aW9uX2FkcmVzc2U6ICI/cT0iLAogICAgICBvcHRpb25fbGltaXQ6ICImbGltaXQ9MTAiLAogICAgICBvcHRpb25fdmlsbGU6ICImdHlwZT1zdHJlZXQiLAogICAgICBvcHRpb25fcG9zdGNvZGU6ICcmcG9zdGNvZGU9JywKICAgICAgc2lyZXQ6ICcnLAogICAgICBzaXJlbjogJycsCiAgICAgIHBheXM6ICcnLAogICAgICBhZHJlc3NlMTogJycsCiAgICAgIGFkcmVzc2UyOiAnJywKICAgICAgYWRyZXNzZTM6ICcnLAogICAgICB2aWxsZTogJycsCiAgICAgIHBvc3Rjb2RlOiAnJywKICAgICAgbGF0OiAnJywKICAgICAgbG9uOiAnJywKICAgICAgaHR0cDogJycsCiAgICAgIHNlbGVjdF9mb3JtOiAnJywKICAgICAgc2VhcmNoaW5nOiBmYWxzZSwKICAgICAgbW9kYWw6IGZhbHNlLAogICAgICBzdGF0ZXM6IFtdLAogICAgICBmaWx0ZXJlZFN0YXRlczogW10sCiAgICAgIGNvbnRpbmVudHM6IFtdLAogICAgICBOY29udGluZW50czogWydldXJvcGUnLCAnYXNpYScsICdhZnJpY2EnLCAnYW1lcmljYXMnLCAnb2NlYW5pYSddLAogICAgICB4Y29udGluZW50OiAwCiAgICB9OwogIH0sCiAgY3JlYXRlZDogZnVuY3Rpb24gY3JlYXRlZCgpIHsKICAgIHZhciBfdGhpcyA9IHRoaXM7CgogICAgaWYgKHRoaXMueGNvbnRpbmVudCA9PSAwKSB7CiAgICAgIHdoaWxlICh0aGlzLnhjb250aW5lbnQgPCB0aGlzLk5jb250aW5lbnRzLmxlbmd0aCkgewogICAgICAgIGF4aW9zLmdldCh0aGlzLmFwaV9jb3VudHJ5ICsgdGhpcy5OY29udGluZW50c1t0aGlzLnhjb250aW5lbnRdKS50aGVuKGZ1bmN0aW9uIChyZXNwb25zZSkgewogICAgICAgICAgX3RoaXMuY29udGluZW50cy5wdXNoKHJlc3BvbnNlLmRhdGEpOwogICAgICAgIH0pOwogICAgICAgIHRoaXMueGNvbnRpbmVudCA9IHRoaXMueGNvbnRpbmVudCArIDE7CiAgICAgIH0KICAgIH0KICB9LAogIHVwZGF0ZWQ6IGZ1bmN0aW9uIHVwZGF0ZWQoKSB7CiAgICB2YXIgX3RoaXMyID0gdGhpczsKCiAgICBpZiAodGhpcy5hZHJlc3NlMSkgewogICAgICB0aGlzLmh0dHAgPSB0aGlzLmFwaV9hZHJlc3NlICsgdGhpcy5vcHRpb25fYWRyZXNzZSArIHRoaXMuYWRyZXNzZTE7CgogICAgICBpZiAodGhpcy52aWxsZSkgewogICAgICAgIHRoaXMuaHR0cCA9IHRoaXMuaHR0cCArICIrIiArIHRoaXMudmlsbGUgKyB0aGlzLm9wdGlvbl92aWxsZTsKICAgICAgfQoKICAgICAgaWYgKHRoaXMucG9zdGNvZGUpIHsKICAgICAgICB0aGlzLmh0dHAgPSB0aGlzLmh0dHAgKyB0aGlzLm9wdGlvbl9wb3N0Y29kZSArIHRoaXMucG9zdGNvZGU7CiAgICAgIH0KCiAgICAgIGF4aW9zLmdldCh0aGlzLmh0dHApLnRoZW4oZnVuY3Rpb24gKHJlc3BvbnNlKSB7CiAgICAgICAgX3RoaXMyLmZpbHRlclN0YXRlcyhyZXNwb25zZS5kYXRhKTsKICAgICAgfSk7CiAgICB9CgogICAgaWYgKHRoaXMuc2lyZXQgJiYgIXRoaXMuc2lyZW4pIHsKICAgICAgdGhpcy5odHRwID0gdGhpcy5hcGlfZW50cmVwcmlzZSArIHRoaXMub3B0aW9uX3NpcmV0ICsgdGhpcy5zaXJldDsKICAgICAgYXhpb3MuZ2V0KHRoaXMuaHR0cCkudGhlbihmdW5jdGlvbiAocmVzcG9uc2UpIHsKICAgICAgICBfdGhpczIuZmlsdGVyU3RhdGVzKHJlc3BvbnNlLmRhdGEpOwogICAgICB9KTsKICAgIH0KCiAgICBpZiAodGhpcy5zaXJlbiAmJiAhdGhpcy5zaXJldCkgewogICAgICB0aGlzLmh0dHAgPSB0aGlzLmFwaV9lbnRyZXByaXNlICsgdGhpcy5vcHRpb25fc2lyZW4gKyB0aGlzLnNpcmVuOwogICAgICBheGlvcy5nZXQodGhpcy5odHRwKS50aGVuKGZ1bmN0aW9uIChyZXNwb25zZSkgewogICAgICAgIF90aGlzMi5maWx0ZXJTdGF0ZXMocmVzcG9uc2UuZGF0YSk7CiAgICAgIH0pOwogICAgfQogIH0sCiAgbWV0aG9kczogewogICAgcmVzZXRfdmFyOiBmdW5jdGlvbiByZXNldF92YXIoKSB7CiAgICAgIHRoaXMuc2lyZXQgPSAnJzsKICAgICAgdGhpcy5zaXJlbiA9ICcnOwogICAgICB0aGlzLmFkcmVzc2UxID0gJyc7CiAgICAgIHRoaXMuYWRyZXNzZTIgPSAnJzsKICAgICAgdGhpcy5hZHJlc3NlMyA9ICcnOwogICAgICB0aGlzLnZpbGxlID0gJyc7CiAgICAgIHRoaXMucG9zdGNvZGUgPSAnJzsKICAgICAgdGhpcy5sYXQgPSAnJzsKICAgICAgdGhpcy5sb24gPSAnJzsKICAgICAgdGhpcy5odHRwID0gJyc7CgogICAgICBpZiAoaXNOYU4oZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ21hcCcpKSkgewogICAgICAgIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdteW1hcCcpLnJlbW92ZUNoaWxkKGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdtYXAnKSk7CiAgICAgIH0KICAgIH0sCiAgICBmaWx0ZXJTdGF0ZXM6IGZ1bmN0aW9uIGZpbHRlclN0YXRlcyhzdGF0ZXMpIHsKICAgICAgdGhpcy5maWx0ZXJlZFN0YXRlcyA9IHN0YXRlczsKICAgIH0sCiAgICBzZXRTdGF0ZTogZnVuY3Rpb24gc2V0U3RhdGUoYWRyZXNzZTEsIHZpbGxlLCBwb3N0Y29kZSwgbG9uLCBsYXQpIHsKICAgICAgdGhpcy5hZHJlc3NlMSA9IGFkcmVzc2UxOwogICAgICB0aGlzLnZpbGxlID0gdmlsbGU7CiAgICAgIHRoaXMucG9zdGNvZGUgPSBwb3N0Y29kZTsKICAgICAgdGhpcy5tb2RhbCA9IGZhbHNlOwogICAgICB0aGlzLmxhdCA9IGxhdDsKICAgICAgdGhpcy5sb24gPSBsb247CiAgICB9LAogICAgaW5pdE1hcDogZnVuY3Rpb24gaW5pdE1hcCgpIHsKICAgICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ215bWFwJykuaW5uZXJIVE1MID0gIjxkaXYgaWQ9J21hcCc+PC9kaXY+IjsKICAgICAgdmFyIG15bWFwID0gTC5tYXAoJ21hcCcpLnNldFZpZXcoW3RoaXMubGF0LCB0aGlzLmxvbl0sIDE4KTsKICAgICAgTC50aWxlTGF5ZXIoJ2h0dHBzOi8ve3N9LnRpbGUub3BlbnN0cmVldG1hcC5vcmcve3p9L3t4fS97eX0ucG5nJywgewogICAgICAgIGF0dHJpYnV0aW9uOiAnJmNvcHk7IDxhIGhyZWY9Imh0dHBzOi8vd3d3Lm9wZW5zdHJlZXRtYXAub3JnL2NvcHlyaWdodCI+T3BlblN0cmVldE1hcDwvYT4gY29udHJpYnV0b3JzJwogICAgICB9KS5hZGRUbyhteW1hcCk7CiAgICAgIEwubWFya2VyKFt0aGlzLmxhdCwgdGhpcy5sb25dKS5hZGRUbyhteW1hcCkuYmluZFBvcHVwKHRoaXMuYWRyZXNzZTEpLm9wZW5Qb3B1cCgpOwogICAgfSwKICAgIHJlc2V0VkM6IGZ1bmN0aW9uIHJlc2V0VkMoKSB7CiAgICAgIHRoaXMudmlsbGUgPSAnJzsKICAgICAgdGhpcy5wb3N0Y29kZSA9ICcnOwogICAgICB0aGlzLnNpcmV0ID0gJyc7CiAgICAgIHRoaXMuc2lyZW4gPSAnJzsKCiAgICAgIGlmIChpc05hTihkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnbWFwJykpKSB7CiAgICAgICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ215bWFwJykucmVtb3ZlQ2hpbGQoZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ21hcCcpKTsKICAgICAgfQogICAgfSwKICAgIHJlc2V0U2lyZXQ6IGZ1bmN0aW9uIHJlc2V0U2lyZXQoKSB7CiAgICAgIHRoaXMuc2lyZXQgPSAnJzsKICAgIH0sCiAgICByZXNldFNpcmVuOiBmdW5jdGlvbiByZXNldFNpcmVuKCkgewogICAgICB0aGlzLnNpcmVuID0gJyc7CiAgICB9CiAgfQp9Ow=="},{"version":3,"sources":["ApiGouv.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n    <div id=\"form\">\n        <div class=\"sugdel\" @click=\"modal = false;\"></div>\n\n            <label for=\"inp\" class=\"inp\">\n\n                <input id=\"inp\" type=\"text\" name=\"doge\" list=\"browsers\" v-model=\"pays\" placeholder=\" \" class=\"field-input\" @focus=\"reset_var()\">\n\n                <span class=\"label\">Pays</span>\n                <span class=\"border\"></span>\n\n            </label>\n\n        <datalist id=\"browsers\">\n\n            <div v-if=\"continents\">\n\n                <div v-for=\"(continent, index) in continents\" :key=\"index\">\n\n                    <div v-for=\"(cont, index) in continent\" :key=\"`A-${index}`\">\n\n                        <div v-if=\"cont.translations.fr === 'France'\">\n                            <option>{{ cont.translations.fr }}</option>\n                        </div>\n\n                    </div>\n\n                    <option>-----------------------</option>\n\n                    <div v-for=\"(cont, index) in continent\" :key=\"`B-${index}`\">\n\n                        <div v-if=\"cont.translations.fr != 'France'\">\n                            <option>{{ cont.translations.fr }}</option>\n                        </div>\n\n                    </div>\n\n                </div>\n\n            </div>\n\n        </datalist>\n\n        <div v-if=\"pays === 'France'\" class=\"relative z-10\">\n\n            <button class=\"btn first\" v-on:click=\"(select_form = 'siret/siren') && reset_var()\">siret/siren</button>\n            <button class=\"btn first\" v-on:click=\"(select_form = 'adresse') && reset_var()\">adresse</button>\n\n            <div v-if=\"select_form === 'adresse'\">\n\n                    <label for=\"inp\" class=\"inp\">\n\n                        <input type=\"text\" id=\"inp\" placeholder=\" \" autocomplete=\"off\" v-model=\"adresse1\" @focus=\"modal = true; resetVC()\">\n                        <span class=\"label\">Adresse</span>\n                        <span class=\"border\"></span>\n\n                    </label>\n\n                    <div v-if=\"adresse1 && modal\">\n                            <ul class=\"suges\" v-for=\"(feature, x) in filteredStates.features\" :key=\"`A-${x}`\">\n                                <li @click=\"setState(feature.properties.name, feature.properties.city, feature.properties.postcode, feature.geometry.coordinates[0], feature.geometry.coordinates[1])\">\n                                    {{feature.properties.label}}\n                                </li>\n                            </ul>\n                    </div>\n\n                    <label for=\"inp\" class=\"inp\">\n\n                        <input id=\"inp\" type=\"text\" v-model=\"adresse2\" placeholder=\" \" @click=\"modal = false;\"/>\n                        <span class=\"label\">Adresse 2</span>\n                        <span class=\"border\"></span>\n\n                    </label>\n\n                    <label for=\"inp\" class=\"inp\">\n\n                        <input id=\"inp\" type=\"text\" v-model=\"adresse3\" placeholder=\" \" @click=\"modal = false;\"/>\n                        <span class=\"label\">Adresse 3</span>\n                        <span class=\"border\"></span>\n\n                    </label>\n\n                    <label for=\"inp\" class=\"inp\">\n\n                        <input id=\"inp\" type=\"text\" v-model=\"postcode\" placeholder=\" \" @click=\"modal = false;\"/>\n                        <span class=\"label\">Code Postal</span>\n                        <span class=\"border\"></span>\n                        \n                    </label>\n\n                    <label for=\"inp\" class=\"inp\">\n\n                        <input id=\"inp\" type=\"text\" v-model=\"ville\" placeholder=\" \" @click=\"modal = false;\"/>\n                        <span class=\"label\">ville</span>\n                        <span class=\"border\"></span>\n                        \n                    </label>\n\n                <button class=\"btn first\" @click=\"initMap()\">valider</button>\n            </div>\n\n            <div v-if=\"select_form === 'siret/siren'\">\n\n                <label for=\"inp\" class=\"inp\">\n\n                    <input type=\"text\" autocomplete=\"off\" v-model=\"siret\" placeholder=\" \" @focus=\"resetSiren()\"/>\n                    <span class=\"label\">Siret</span>\n                    <span class=\"border\"></span>\n\n                </label>\n\n                <label for=\"inp\" class=\"inp\">\n\n                    <input type=\"text\" autocomplete=\"off\" v-model=\"siren\" placeholder=\" \" @focus=\"resetSiret()\"/>\n                    <span class=\"label\">Siren</span>\n                    <span class=\"border\"></span>\n\n                </label>\n\n                <button class=\"btn first\" @click=\"initMap()\">valider</button>\n            </div>\n            \n            <div id=\"mymap\"></div>\n        </div>\n\n        <div v-if=\"pays != 'France'\">\n\n            <div v-for=\"(continent, index) in continents\" :key=\"index\">\n\n                <div v-for=\"(cont, index) in continent\" :key=\"`B-${index}`\">\n\n                    <div v-if=\"pays === cont.translations.fr\">\n\n                        <label for=\"inp\" class=\"inp\">\n\n                            <input type=\"text\" id=\"inp\" v-model=\"adresse1\" placeholder=\" \" autocomplete=\"off\" @focus=\"resetVC()\">\n                            <span class=\"label\">Adresse</span>\n                            <span class=\"border\"></span>\n\n                        </label>\n\n                        <label for=\"inp\" class=\"inp\">\n\n                            <input id=\"inp\" type=\"text\" v-model=\"adresse2\" placeholder=\" \"/>\n                            <span class=\"label\">Adresse 2</span>\n                            <span class=\"border\"></span>\n\n                        </label>\n\n                        <label for=\"inp\" class=\"inp\">\n\n                            <input id=\"inp\" type=\"text\" v-model=\"adresse3\" placeholder=\" \"/>\n                            <span class=\"label\">Adresse 3</span>\n                            <span class=\"border\"></span>\n\n                        </label>\n\n                        <label for=\"inp\" class=\"inp\">\n\n                            <input id=\"inp\" type=\"text\" v-model=\"postcode\" placeholder=\" \"/>\n                            <span class=\"label\">postecode</span>\n                            <span class=\"border\"></span>\n                            \n                        </label>\n\n                        <label for=\"inp\" class=\"inp\">\n\n                            <input id=\"inp\" type=\"text\" v-model=\"ville\" placeholder=\" \"/>\n                            <span class=\"label\">ville</span>\n                            <span class=\"border\"></span>\n                            \n                        </label>\n\n                        <button class=\"btn first\">valider</button>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</template>\n\n\n<script>\n\n    import axios from 'axios';\n    import L from 'leaflet';\n\n    export default {\n        data() {\n\n            return {\n            api_adresse: \"https://api-adresse.data.gouv.fr/search/\",\n            api_country: \"https://restcountries.eu/rest/v2/region/\",\n            api_entreprise: \"https://entreprise.data.gouv.fr/api/sirene/v3/\",\n            option_siret: \"etablissements/\",\n            option_siren: \"unites_legales/\",    \n            option_adresse: \"?q=\",\n            option_limit: \"&limit=10\",\n            option_ville: \"&type=street\",\n            option_postcode: '&postcode=',\n            siret: '',\n            siren: '',\n            pays: '',\n            adresse1: '',\n            adresse2: '',\n            adresse3: '',\n            ville: '',\n            postcode: '',\n            lat: '',\n            lon: '',\n            http: '',\n            select_form: '',\n            searching: false,\n            modal: false,\n\n            states: [],\n            filteredStates: [],\n\n            continents:[],\n            Ncontinents:[\n                'europe',\n                'asia',\n                'africa',\n                'americas',\n                'oceania'\n            ],\n            xcontinent: 0,\n            }\n        },\n\n        created() {\n\n            if (this.xcontinent == 0) {\n                while (this.xcontinent < this.Ncontinents.length) {\n                    axios.get(this.api_country + this.Ncontinents[this.xcontinent])\n                    .then(response => {\n                        this.continents.push(response.data);\n                    })\n                    this.xcontinent = this.xcontinent + 1;\n                }\n            }\n        },\n\n        updated() {\n\n            if(this.adresse1){\n                this.http = this.api_adresse + this.option_adresse + this.adresse1\n\n                if(this.ville) {\n                    this.http = this.http + \"+\" + this.ville + this.option_ville\n                }\n                if (this.postcode) {\n                    this.http = this.http + this.option_postcode + this.postcode\n                }\n                axios.get(this.http)\n                .then(response => {\n                    this.filterStates(response.data);\n                })\n            }\n\n            if(this.siret && !this.siren) {\n                this.http = this.api_entreprise + this.option_siret + this.siret\n                axios.get(this.http)\n                .then(response => {\n                    this.filterStates(response.data);\n                })\n            }\n\n            if(this.siren && !this.siret) {\n                this.http = this.api_entreprise + this.option_siren + this.siren\n                axios.get(this.http)\n                .then(response => {\n                    this.filterStates(response.data);\n                })\n            }\n        },\n\n        methods: {\n\n            reset_var() {\n                this.siret = '';\n                this.siren = '';\n                this.adresse1 = '';\n                this.adresse2 = '';\n                this.adresse3 = '';\n                this.ville = '';\n                this.postcode = '';\n                this.lat = '';\n                this.lon = '';\n                this.http = '';\n\n                if ((isNaN(document.getElementById('map')))) {\n                        document.getElementById('mymap').removeChild(document.getElementById('map'))\n                }\n            },\n\n            filterStates(states) {\n                this.filteredStates = states;\n            },\n\n            setState(adresse1, ville, postcode, lon, lat) {\n                this.adresse1 = adresse1;\n                this.ville = ville;\n                this.postcode = postcode;\n                this.modal = false; \n                this.lat = lat;\n                this.lon = lon;\n            },\n\n            initMap() {\n                document.getElementById('mymap').innerHTML = \"<div id='map'></div>\";\n                let mymap = L.map('map').setView([this.lat, this.lon], 18);\n                L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {\n                    attribution: '&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'\n                }).addTo(mymap);\n                L.marker([this.lat, this.lon]).addTo(mymap)\n                .bindPopup(this.adresse1)\n                .openPopup();\n            },\n\n            resetVC() {\n                this.ville = '';\n                this.postcode = '';\n                this.siret = '';\n                this.siren = '';\n                if ((isNaN(document.getElementById('map')))) {\n                    document.getElementById('mymap').removeChild(document.getElementById('map'))\n                }\n            },\n            resetSiret() {\n                this.siret = '';\n            },\n            resetSiren() {\n                this.siren = '';\n            },\n        },\n\n    }\n\n</script>\n\n<style>\n\n@import\"../css/fichier.css\";\n\n</style>"],"sourceRoot":"src/components"}]}