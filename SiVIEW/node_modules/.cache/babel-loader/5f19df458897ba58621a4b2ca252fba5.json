{"remainingRequest":"C:\\Users\\kryst\\Documents\\Projets_2019\\name\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\kryst\\Documents\\Projets_2019\\name\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\kryst\\Documents\\Projets_2019\\name\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\kryst\\Documents\\Projets_2019\\name\\src\\components\\ApiGouv.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\kryst\\Documents\\Projets_2019\\name\\src\\components\\ApiGouv.vue","mtime":1576614526654},{"path":"C:\\Users\\kryst\\Documents\\Projets_2019\\name\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1576166348000},{"path":"C:\\Users\\kryst\\Documents\\Projets_2019\\name\\node_modules\\babel-loader\\lib\\index.js","mtime":1576166348000},{"path":"C:\\Users\\kryst\\Documents\\Projets_2019\\name\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1576166348000},{"path":"C:\\Users\\kryst\\Documents\\Projets_2019\\name\\node_modules\\vue-loader\\lib\\index.js","mtime":1576166348000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkubWFwIjsKLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KaW1wb3J0IGF4aW9zIGZyb20gJ2F4aW9zJzsKaW1wb3J0IEwgZnJvbSAnbGVhZmxldCc7CmV4cG9ydCBkZWZhdWx0IHsKICBkYXRhOiBmdW5jdGlvbiBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgYXBpX2FkcmVzc2U6ICJodHRwczovL2FwaS1hZHJlc3NlLmRhdGEuZ291di5mci9zZWFyY2gvIiwKICAgICAgYXBpX2NvdW50cnk6ICJodHRwczovL3Jlc3Rjb3VudHJpZXMuZXUvcmVzdC92Mi9yZWdpb24vIiwKICAgICAgYXBpX2VudHJlcHJpc2U6ICJodHRwczovL2VudHJlcHJpc2UuZGF0YS5nb3V2LmZyL2FwaS9zaXJlbmUvdjMvIiwKICAgICAgb3B0aW9uX3NpcmV0OiAiZXRhYmxpc3NlbWVudHMvIiwKICAgICAgb3B0aW9uX3NpcmVuOiAidW5pdGVzX2xlZ2FsZXMvIiwKICAgICAgb3B0aW9uX2FkcmVzc2U6ICI/cT0iLAogICAgICBvcHRpb25fbGltaXQ6ICImbGltaXQ9MTAiLAogICAgICBvcHRpb25fdmlsbGU6ICImdHlwZT1zdHJlZXQiLAogICAgICBvcHRpb25fcG9zdGNvZGU6ICcmcG9zdGNvZGU9JywKICAgICAgc2lyZXQ6ICcnLAogICAgICBzaXJlbjogJycsCiAgICAgIHBheXM6ICcnLAogICAgICBhZHJlc3NlMTogJycsCiAgICAgIGFkcmVzc2UyOiAnJywKICAgICAgYWRyZXNzZTM6ICcnLAogICAgICB2aWxsZTogJycsCiAgICAgIHBvc3Rjb2RlOiAnJywKICAgICAgaHR0cDogJycsCiAgICAgIHNlbGVjdF9mb3JtOiAnJywKICAgICAgc2VhcmNoaW5nOiBmYWxzZSwKICAgICAgbW9kYWw6IGZhbHNlLAogICAgICBsb246ICcnLAogICAgICBsYXQ6ICcnLAogICAgICBzdGF0ZXM6IFtdLAogICAgICBmaWx0ZXJlZFN0YXRlczogW10sCiAgICAgIGNvbnRpbmVudHM6IFtdLAogICAgICBOY29udGluZW50czogWydldXJvcGUnLCAnYXNpYScsICdhZnJpY2EnLCAnYW1lcmljYXMnLCAnb2NlYW5pYSddLAogICAgICB4Y29udGluZW50OiAwCiAgICB9OwogIH0sCiAgY3JlYXRlZDogZnVuY3Rpb24gY3JlYXRlZCgpIHsKICAgIHZhciBfdGhpcyA9IHRoaXM7CgogICAgaWYgKHRoaXMueGNvbnRpbmVudCA9PSAwKSB7CiAgICAgIHdoaWxlICh0aGlzLnhjb250aW5lbnQgPCB0aGlzLk5jb250aW5lbnRzLmxlbmd0aCkgewogICAgICAgIGF4aW9zLmdldCh0aGlzLmFwaV9jb3VudHJ5ICsgdGhpcy5OY29udGluZW50c1t0aGlzLnhjb250aW5lbnRdKS50aGVuKGZ1bmN0aW9uIChyZXNwb25zZSkgewogICAgICAgICAgX3RoaXMuY29udGluZW50cy5wdXNoKHJlc3BvbnNlLmRhdGEpOwogICAgICAgIH0pOwogICAgICAgIHRoaXMueGNvbnRpbmVudCA9IHRoaXMueGNvbnRpbmVudCArIDE7CiAgICAgIH0KICAgIH0KICB9LAogIHVwZGF0ZWQ6IGZ1bmN0aW9uIHVwZGF0ZWQoKSB7CiAgICB2YXIgX3RoaXMyID0gdGhpczsKCiAgICBpZiAodGhpcy5hZHJlc3NlMSkgewogICAgICB0aGlzLmh0dHAgPSB0aGlzLmFwaV9hZHJlc3NlICsgdGhpcy5vcHRpb25fYWRyZXNzZSArIHRoaXMuYWRyZXNzZTE7CgogICAgICBpZiAodGhpcy52aWxsZSkgewogICAgICAgIHRoaXMuaHR0cCA9IHRoaXMuaHR0cCArICIrIiArIHRoaXMudmlsbGUgKyB0aGlzLm9wdGlvbl92aWxsZTsKICAgICAgfQoKICAgICAgaWYgKHRoaXMucG9zdGNvZGUpIHsKICAgICAgICB0aGlzLmh0dHAgPSB0aGlzLmh0dHAgKyB0aGlzLm9wdGlvbl9wb3N0Y29kZSArIHRoaXMucG9zdGNvZGU7CiAgICAgIH0KCiAgICAgIGF4aW9zLmdldCh0aGlzLmh0dHApLnRoZW4oZnVuY3Rpb24gKHJlc3BvbnNlKSB7CiAgICAgICAgX3RoaXMyLmZpbHRlclN0YXRlcyhyZXNwb25zZS5kYXRhKTsKICAgICAgfSk7CiAgICB9CgogICAgaWYgKHRoaXMuc2lyZXQgJiYgIXRoaXMuc2lyZW4pIHsKICAgICAgdGhpcy5odHRwID0gdGhpcy5hcGlfZW50cmVwcmlzZSArIHRoaXMub3B0aW9uX3NpcmV0ICsgdGhpcy5zaXJldDsKICAgICAgYXhpb3MuZ2V0KHRoaXMuaHR0cCkudGhlbihmdW5jdGlvbiAocmVzcG9uc2UpIHsKICAgICAgICBfdGhpczIuZmlsdGVyU3RhdGVzKHJlc3BvbnNlLmRhdGEpOwogICAgICB9KTsKICAgIH0KCiAgICBpZiAodGhpcy5zaXJlbiAmJiAhdGhpcy5zaXJldCkgewogICAgICB0aGlzLmh0dHAgPSB0aGlzLmFwaV9lbnRyZXByaXNlICsgdGhpcy5vcHRpb25fc2lyZW4gKyB0aGlzLnNpcmVuOwogICAgICBheGlvcy5nZXQodGhpcy5odHRwKS50aGVuKGZ1bmN0aW9uIChyZXNwb25zZSkgewogICAgICAgIF90aGlzMi5maWx0ZXJTdGF0ZXMocmVzcG9uc2UuZGF0YSk7CiAgICAgIH0pOwogICAgfQogIH0sCiAgbWV0aG9kczogewogICAgZmlsdGVyU3RhdGVzOiBmdW5jdGlvbiBmaWx0ZXJTdGF0ZXMoc3RhdGVzKSB7CiAgICAgIHRoaXMuZmlsdGVyZWRTdGF0ZXMgPSBzdGF0ZXM7CiAgICB9LAogICAgc2V0U3RhdGU6IGZ1bmN0aW9uIHNldFN0YXRlKGFkcmVzc2UxLCB2aWxsZSwgcG9zdGNvZGUsIGxvbiwgbGF0KSB7CiAgICAgIHRoaXMuYWRyZXNzZTEgPSBhZHJlc3NlMTsKICAgICAgdGhpcy52aWxsZSA9IHZpbGxlOwogICAgICB0aGlzLnBvc3Rjb2RlID0gcG9zdGNvZGU7CiAgICAgIHRoaXMubW9kYWwgPSBmYWxzZTsKICAgICAgdGhpcy5pbml0TWFwKGxvbiwgbGF0KTsKICAgIH0sCiAgICBpbml0TWFwOiBmdW5jdGlvbiBpbml0TWFwKGxvbiwgbGF0KSB7CiAgICAgIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdteW1hcCcpLmlubmVySFRNTCA9ICI8ZGl2IGlkPSdtYXAnPjwvZGl2PiI7CiAgICAgIHZhciBteW1hcCA9IEwubWFwKCdtYXAnKS5zZXRWaWV3KFtsYXQsIGxvbl0sIDE4KTsKICAgICAgTC50aWxlTGF5ZXIoJ2h0dHBzOi8ve3N9LnRpbGUub3BlbnN0cmVldG1hcC5vcmcve3p9L3t4fS97eX0ucG5nJywgewogICAgICAgIGF0dHJpYnV0aW9uOiAnJmNvcHk7IDxhIGhyZWY9Imh0dHBzOi8vd3d3Lm9wZW5zdHJlZXRtYXAub3JnL2NvcHlyaWdodCI+T3BlblN0cmVldE1hcDwvYT4gY29udHJpYnV0b3JzJwogICAgICB9KS5hZGRUbyhteW1hcCk7CiAgICAgIEwubWFya2VyKFtsYXQsIGxvbl0pLmFkZFRvKG15bWFwKS5iaW5kUG9wdXAodGhpcy5hZHJlc3NlMSkub3BlblBvcHVwKCk7CiAgICB9LAogICAgcmVzZXRWQzogZnVuY3Rpb24gcmVzZXRWQygpIHsKICAgICAgdGhpcy52aWxsZSA9ICcnLCB0aGlzLnBvc3Rjb2RlID0gJyc7CiAgICB9CiAgfQp9Ow=="},{"version":3,"sources":["ApiGouv.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n    <div id=\"form\">\r\n\r\n            <label for=\"inp\" class=\"inp\">\r\n\r\n                <input id=\"inp\" type=\"text\" name=\"doge\" list=\"browsers\" v-model=\"pays\" placeholder=\" \" class=\"field-input\">\r\n\r\n                <span class=\"label\">Pays</span>\r\n                <span class=\"border\"></span>\r\n\r\n            </label>\r\n\r\n            \r\n\r\n        <datalist id=\"browsers\">\r\n\r\n            <div v-if=\"continents\">\r\n\r\n                <div v-for=\"(continent, index) in continents\" :key=\"index\">\r\n\r\n                    <div v-for=\"(cont, index) in continent\" :key=\"`A-${index}`\">\r\n\r\n                        <div v-if=\"cont.translations.fr === 'France'\">\r\n                            <option>{{ cont.translations.fr }}</option>\r\n                        </div>\r\n\r\n                    </div>\r\n\r\n                    <option>-----------------------</option>\r\n\r\n                    <div v-for=\"(cont, index) in continent\" :key=\"`B-${index}`\">\r\n\r\n                        <div v-if=\"cont.translations.fr != 'France'\">\r\n                            <option>{{ cont.translations.fr }}</option>\r\n                        </div>\r\n\r\n                    </div>\r\n\r\n                </div>\r\n\r\n            </div>\r\n\r\n        </datalist>\r\n\r\n        <div v-if=\"pays === 'France'\">\r\n            <button class=\"btn first\" v-on:click=\"select_form = 'siret/siren'\">siret/siren</button>\r\n            <button class=\"btn first\" v-on:click=\"select_form = 'adresse'\">adresse</button>\r\n\r\n            <div v-if=\"select_form === 'adresse'\">\r\n\r\n                <div @click=\"modal = false\"></div>\r\n\r\n                    <label for=\"inp\" class=\"inp\">\r\n\r\n                        <input type=\"text\" id=\"inp\" placeholder=\" \" autocomplete=\"off\" v-model=\"adresse1\" @focus=\"modal = true; resetVC()\">\r\n                        <span class=\"label\">Adresse</span>\r\n                        <span class=\"border\"></span>\r\n\r\n                    </label>\r\n\r\n                    <label for=\"inp\" class=\"inp\">\r\n\r\n                        <input id=\"inp\" type=\"text\" v-model=\"adresse2\" placeholder=\" \"/>\r\n                        <span class=\"label\">Adresse 2</span>\r\n                        <span class=\"border\"></span>\r\n\r\n                    </label>\r\n\r\n                    <label for=\"inp\" class=\"inp\">\r\n\r\n                        <input id=\"inp\" type=\"text\" v-model=\"adresse3\" placeholder=\" \"/>\r\n                        <span class=\"label\">Adresse 3</span>\r\n                        <span class=\"border\"></span>\r\n\r\n                    </label>\r\n\r\n                    <label for=\"inp\" class=\"inp\">\r\n\r\n                        <input id=\"inp\" type=\"text\" v-model=\"postcode\" placeholder=\" \"/>\r\n                        <span class=\"label\">Code Postal</span>\r\n                        <span class=\"border\"></span>\r\n                        \r\n                    </label>\r\n\r\n                    \r\n\r\n\r\n                    <label for=\"inp\" class=\"inp\">\r\n\r\n                        <input id=\"inp\" type=\"text\" v-model=\"ville\" placeholder=\" \"/>\r\n                        <span class=\"label\">Ville</span>\r\n                        <span class=\"border\"></span>\r\n                        \r\n                    </label>\r\n                    \r\n\r\n                    \r\n\r\n                <div v-if=\"adresse1 && modal\">\r\n\r\n                    <div style=\"cursor:pointer;\" v-for=\"(feature, x) in filteredStates.features\" :key=\"`A-${x}`\">\r\n\r\n                        <ul>\r\n                            <li @click=\"setState(feature.properties.name, feature.properties.city, feature.properties.postcode, feature.geometry.coordinates[0], feature.geometry.coordinates[1])\">\r\n\r\n                                {{feature.properties.label}}\r\n                            </li>\r\n                        </ul>\r\n\r\n                    </div>\r\n\r\n                </div>\r\n                <button class=\"btn first\" v-on:click=\"validate = ''\">Valider</button>\r\n            </div>\r\n\r\n            <div v-if=\"select_form === 'siret/siren'\">\r\n\r\n\r\n                <label for=\"inp\" class=\"inp\">\r\n\r\n                        <input id=\"inp\" type=\"text\" placeholder=\" \" autocomplete=\"off\" v-model=\"siret\" @focus=\"modal = true\"/>\r\n                        <span class=\"label\">Siret</span>\r\n                        <span class=\"border\"></span>\r\n\r\n                </label>\r\n                <label for=\"inp\" class=\"inp\">\r\n\r\n                        <input id=\"inp\" type=\"text\" placeholder=\" \" autocomplete=\"off\" v-model=\"siren\" @focus=\"modal = true\"/>\r\n                        <span class=\"label\">Siren</span>\r\n                        <span class=\"border\"></span>\r\n\r\n                </label>\r\n                \r\n                <div v-if=\"(siren && !siret) && modal\">\r\n                    <ul>\r\n                        <li @click=\"setState(filteredStates.unite_legale.etablissements[0].geo_l4, filteredStates.unite_legale.etablissements[0].libelle_commune, filteredStates.unite_legale.etablissements[0].code_postal, filteredStates.unite_legale.etablissements[0].longitude, filteredStates.unite_legale.etablissements[0].latitude)\">\r\n                            {{filteredStates.unite_legale.etablissements[0].geo_adresse}}\r\n                        </li>\r\n                    </ul>\r\n                </div>\r\n                <div v-if=\"(siret && !siren) && modal\">\r\n                    <ul>\r\n                        <li @click=\"setState(filteredStates.etablissement.geo_l4, filteredStates.etablissement.libelle_commune, filteredStates.etablissement.code_postal, filteredStates.etablissement.longitude, filteredStates.etablissement.latitude)\">\r\n                            {{filteredStates.etablissement.geo_adresse}}\r\n                        </li>\r\n                    </ul>\r\n                </div>\r\n                <button class=\"btn first\" v-on:click=\"validate = ''\">Valider</button>\r\n            </div>\r\n            \r\n            <div id=\"mymap\"></div>\r\n\r\n        </div>\r\n\r\n        <div v-if=\"pays != 'France'\">\r\n\r\n            <div v-for=\"(continent, index) in continents\" :key=\"index\">\r\n\r\n                <div v-for=\"(cont, index) in continent\" :key=\"`B-${index}`\">\r\n\r\n                    <div v-if=\"pays === cont.translations.fr\">\r\n\r\n                        <label for=\"inp\" class=\"inp\">\r\n\r\n                            <input type=\"text\" id=\"inp\" v-model=\"adresse1\" placeholder=\" \" autocomplete=\"off\" @focus=\"modal = true; resetVC()\">\r\n                            <span class=\"label\">Adresse</span>\r\n                            <span class=\"border\"></span>\r\n\r\n                        </label>\r\n\r\n                        <label for=\"inp\" class=\"inp\">\r\n\r\n                            <input id=\"inp\" type=\"text\" v-model=\"adresse2\" placeholder=\" \"/>\r\n                            <span class=\"label\">Adresse 2</span>\r\n                            <span class=\"border\"></span>\r\n\r\n                        </label>\r\n\r\n                        <label for=\"inp\" class=\"inp\">\r\n\r\n                            <input id=\"inp\" type=\"text\" v-model=\"adresse3\" placeholder=\" \"/>\r\n                            <span class=\"label\">Adresse 3</span>\r\n                            <span class=\"border\"></span>\r\n\r\n                        </label>\r\n\r\n                        <label for=\"inp\" class=\"inp\">\r\n\r\n                            <input id=\"inp\" type=\"text\" v-model=\"postcode\" placeholder=\" \"/>\r\n                            <span class=\"label\">Code Postal</span>\r\n                            <span class=\"border\"></span>\r\n                            \r\n                        </label>\r\n\r\n                        <label for=\"inp\" class=\"inp\">\r\n\r\n                            <input id=\"inp\" type=\"text\" v-model=\"ville\" placeholder=\" \"/>\r\n                            <span class=\"label\">Ville</span>\r\n                            <span class=\"border\"></span>\r\n                            \r\n                        </label>\r\n\r\n                    </div>\r\n\r\n                </div>\r\n\r\n            </div>\r\n\r\n        </div>\r\n\r\n    </div>\r\n\r\n</template>\r\n\r\n\r\n<script>\r\n\r\n    import axios from 'axios';\r\n    import L from 'leaflet';\r\n\r\n    export default {\r\n        data() {\r\n\r\n            return {\r\n            api_adresse: \"https://api-adresse.data.gouv.fr/search/\",\r\n            api_country: \"https://restcountries.eu/rest/v2/region/\",\r\n            api_entreprise: \"https://entreprise.data.gouv.fr/api/sirene/v3/\",\r\n            option_siret: \"etablissements/\",\r\n            option_siren: \"unites_legales/\",    \r\n            option_adresse: \"?q=\",\r\n            option_limit: \"&limit=10\",\r\n            option_ville: \"&type=street\",\r\n            option_postcode: '&postcode=',\r\n            siret: '',\r\n            siren: '',\r\n            pays: '',\r\n            adresse1: '',\r\n            adresse2: '',\r\n            adresse3: '',\r\n            ville: '',\r\n            postcode: '',\r\n            http: '',\r\n            select_form: '',\r\n            searching: false,\r\n            modal: false,\r\n\r\n            lon: '',\r\n            lat: '',\r\n\r\n            states: [],\r\n            filteredStates: [],\r\n\r\n            continents:[],\r\n            Ncontinents:[\r\n                'europe',\r\n                'asia',\r\n                'africa',\r\n                'americas',\r\n                'oceania'\r\n            ],\r\n            xcontinent: 0,\r\n            }\r\n        },\r\n\r\n        created() {\r\n\r\n            if (this.xcontinent == 0) {\r\n                while (this.xcontinent < this.Ncontinents.length) {\r\n                    axios.get(this.api_country + this.Ncontinents[this.xcontinent])\r\n                    .then(response => {\r\n                        this.continents.push(response.data);\r\n                    })\r\n                    this.xcontinent = this.xcontinent + 1;\r\n                }\r\n            }\r\n        },\r\n\r\n        updated() {\r\n\r\n            if(this.adresse1){\r\n                this.http = this.api_adresse + this.option_adresse + this.adresse1\r\n\r\n                if(this.ville) {\r\n                    this.http = this.http + \"+\" + this.ville + this.option_ville\r\n                }\r\n                if (this.postcode) {\r\n                    this.http = this.http + this.option_postcode + this.postcode\r\n                }\r\n                axios.get(this.http)\r\n                .then(response => {\r\n                    this.filterStates(response.data);\r\n                })\r\n            }\r\n\r\n            if(this.siret && !this.siren) {\r\n                this.http = this.api_entreprise + this.option_siret + this.siret\r\n                axios.get(this.http)\r\n                .then(response => {\r\n                    this.filterStates(response.data);\r\n                })\r\n            }\r\n\r\n            if(this.siren && !this.siret) {\r\n                this.http = this.api_entreprise + this.option_siren + this.siren\r\n                axios.get(this.http)\r\n                .then(response => {\r\n                    this.filterStates(response.data);\r\n                })\r\n            }\r\n\r\n        },\r\n\r\n        methods: {\r\n\r\n            filterStates(states) {\r\n                this.filteredStates = states;\r\n            },\r\n\r\n            setState(adresse1, ville, postcode, lon, lat) {\r\n                this.adresse1 = adresse1;\r\n                this.ville = ville;\r\n                this.postcode = postcode;\r\n                this.modal = false;\r\n                this.initMap(lon, lat);\r\n            },\r\n\r\n            initMap(lon, lat) {\r\n                document.getElementById('mymap').innerHTML = \"<div id='map'></div>\";\r\n                let mymap = L.map('map').setView([lat, lon], 18);\r\n                L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {\r\n                    attribution: '&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'\r\n                }).addTo(mymap);\r\n                L.marker([lat, lon]).addTo(mymap)\r\n                .bindPopup(this.adresse1)\r\n                .openPopup();\r\n            },\r\n\r\n            resetVC() {\r\n                this.ville = '',\r\n                this.postcode = ''\r\n            }\r\n\r\n        },\r\n\r\n    }\r\n\r\n</script>\r\n\r\n<style>\r\n\r\n@import\"../css/fichier.css\"\r\n\r\n</style>"],"sourceRoot":"src/components"}]}